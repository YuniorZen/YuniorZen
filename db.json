{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/assets/image/dev.jpg","path":"assets/image/dev.jpg","modified":1,"renderable":0},{"_id":"source/assets/image/app.png","path":"assets/image/app.png","modified":1,"renderable":0},{"_id":"source/assets/image/status-bar-2019-10-23.png","path":"assets/image/status-bar-2019-10-23.png","modified":1,"renderable":0},{"_id":"source/assets/image/ios-android-bar-2019-10-23.png","path":"assets/image/ios-android-bar-2019-10-23.png","modified":1,"renderable":0},{"_id":"source/assets/image/minicode02-pre.png","path":"assets/image/minicode02-pre.png","modified":1,"renderable":0},{"_id":"source/assets/image/process-demo.png","path":"assets/image/process-demo.png","modified":1,"renderable":0},{"_id":"themes/hexo-theme-next-6.4.0/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-6.4.0/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-6.4.0/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-6.4.0/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-6.4.0/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-6.4.0/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-6.4.0/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-6.4.0/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-6.4.0/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-6.4.0/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-6.4.0/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-6.4.0/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-6.4.0/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-6.4.0/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-6.4.0/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-6.4.0/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-6.4.0/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-6.4.0/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-6.4.0/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"source/assets/image/ios-android-status-bar-2019-10-23.png","path":"assets/image/ios-android-status-bar-2019-10-23.png","modified":1,"renderable":0},{"_id":"themes/hexo-theme-next-6.4.0/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-6.4.0/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-6.4.0/source/js/src/exturl.js","path":"js/src/exturl.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-6.4.0/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-6.4.0/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-6.4.0/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-6.4.0/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-6.4.0/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-6.4.0/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-6.4.0/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-6.4.0/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-6.4.0/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-6.4.0/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"source/assets/image/landpage-create-2019-11-30.png","path":"assets/image/landpage-create-2019-11-30.png","modified":1,"renderable":0},{"_id":"themes/hexo-theme-next-6.4.0/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-6.4.0/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-6.4.0/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"source/assets/image/navigation-video-2019-10-25.gif","path":"assets/image/navigation-video-2019-10-25.gif","modified":1,"renderable":0}],"Cache":[{"_id":"themes/hexo-theme-next-6.4.0/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1575125201437},{"_id":"themes/hexo-theme-next-6.4.0/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1575125201437},{"_id":"themes/hexo-theme-next-6.4.0/.gitignore","hash":"a18c2e83bb20991b899b58e6aeadcb87dd8aa16e","modified":1575125201439},{"_id":"themes/hexo-theme-next-6.4.0/.eslintrc.json","hash":"cc5f297f0322672fe3f684f823bc4659e4a54c41","modified":1575125201437},{"_id":"themes/hexo-theme-next-6.4.0/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1575125201437},{"_id":"themes/hexo-theme-next-6.4.0/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1575125201439},{"_id":"themes/hexo-theme-next-6.4.0/.travis.yml","hash":"3d1dc928c4a97933e64379cfde749dedf62f252c","modified":1575125201439},{"_id":"themes/hexo-theme-next-6.4.0/LICENSE.md","hash":"fc7227c508af3351120181cbf2f9b99dc41f063e","modified":1575125201440},{"_id":"themes/hexo-theme-next-6.4.0/README.md","hash":"c1d6d1c6b75736b892e179865833ea58da5ca9d2","modified":1575125201440},{"_id":"themes/hexo-theme-next-6.4.0/_config.yml","hash":"359f29884babd2f59b0cfbd09a1ec824b45b09e7","modified":1575125201441},{"_id":"themes/hexo-theme-next-6.4.0/bower.json","hash":"a8c832da6aad5245052aed7ff26c246f85d68c6c","modified":1575125201441},{"_id":"themes/hexo-theme-next-6.4.0/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1575125201442},{"_id":"themes/hexo-theme-next-6.4.0/gulpfile.coffee","hash":"48d2f9fa88a4210308fc41cc7d3f6d53989f71b7","modified":1575125201449},{"_id":"themes/hexo-theme-next-6.4.0/package.json","hash":"11a0b27f92da8abf1efbea6e7a0af4271d7bff9e","modified":1575125201476},{"_id":"themes/hexo-theme-next-6.4.0/x.wsd","hash":"c3fbb3d9018abf7cea4ff918180d63723c75db50","modified":1575125201514},{"_id":"source/_posts/可视化页面编辑管理系统开发实践分享.md","hash":"8f50919931ba7008e64c2358997cdb9d439adbac","modified":1575212985186},{"_id":"source/_posts/一分钟理清GasGas、PriceGas、Limit.md","hash":"dc4c51b0d212376a847321d069f9596047341926","modified":1575125201402},{"_id":"source/_posts/如何在Vue项目中使用压缩字体库.md","hash":"924f60de2af9d4a7a658e5e49384ec10b63563f9","modified":1575125201402},{"_id":"source/_posts/巧用伪元素放大手机端点击焦点.md","hash":"9e5aa2f713b29ea8ba8161b6e80e9639044cd3b9","modified":1575125201403},{"_id":"source/_posts/小程序取消橡皮筋回弹效果解决方案及坑总结.md","hash":"a082649c23d2333c09b933eb2deb8ab96b59f7f0","modified":1575125201402},{"_id":"source/_posts/小程序头部自定义导航组件实现原理及坑分享.md","hash":"a670a5301f0ea785a87d6dd4c2e23cbd4d51af15","modified":1575125201402},{"_id":"source/about/index.md","hash":"88fb7ccc6c95de928fb1b7d823b93346eead28ee","modified":1575125201404},{"_id":"source/categories/index.md","hash":"d4fc2d3383a54c9d635c10b9b74dda73b60b8e08","modified":1575125201436},{"_id":"source/tags/index.md","hash":"0229ce638dcd76b0702188e7e6c1adccb6e2fc35","modified":1575125201436},{"_id":"themes/hexo-theme-next-6.4.0/.github/CODE_OF_CONDUCT.md","hash":"b63696d41f022525e40d7e7870c3785b6bc7536b","modified":1575125201438},{"_id":"themes/hexo-theme-next-6.4.0/.github/ISSUE_TEMPLATE.md","hash":"00c25366764e6b9ccb40b877c60dc13b2916bbf7","modified":1575125201438},{"_id":"themes/hexo-theme-next-6.4.0/.github/PULL_REQUEST_TEMPLATE.md","hash":"7abbb4c8a29b2c14e576a00f53dbc0b4f5669c13","modified":1575125201438},{"_id":"themes/hexo-theme-next-6.4.0/.github/CONTRIBUTING.md","hash":"a5335a99377069ae76fd993d488bc3eaf48f3a05","modified":1575125201438},{"_id":"themes/hexo-theme-next-6.4.0/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1575125201439},{"_id":"themes/hexo-theme-next-6.4.0/.github/stale.yml","hash":"fd0856f6745db8bd0228079ccb92a662830cc4fb","modified":1575125201439},{"_id":"themes/hexo-theme-next-6.4.0/docs/ALGOLIA-SEARCH.md","hash":"141e989844d0b5ae2e09fb162a280715afb39b0d","modified":1575125201443},{"_id":"themes/hexo-theme-next-6.4.0/docs/DATA-FILES.md","hash":"8e1962dd3e1b700169b3ae5bba43992f100651ce","modified":1575125201444},{"_id":"themes/hexo-theme-next-6.4.0/docs/AUTHORS.md","hash":"7b24be2891167bdedb9284a682c2344ec63e50b5","modified":1575125201444},{"_id":"themes/hexo-theme-next-6.4.0/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1575125201443},{"_id":"themes/hexo-theme-next-6.4.0/docs/INSTALLATION.md","hash":"2bbdd6c1751b2b42ce9b9335da420c6026a483e9","modified":1575125201444},{"_id":"themes/hexo-theme-next-6.4.0/docs/LICENSE","hash":"fe607fe22fc9308f6434b892a7f2d2c5514b8f0d","modified":1575125201445},{"_id":"themes/hexo-theme-next-6.4.0/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"120750c03ec30ccaa470b113bbe39f3d423c67f0","modified":1575125201444},{"_id":"themes/hexo-theme-next-6.4.0/docs/UPDATE-FROM-5.1.X.md","hash":"ad57c168d12ba01cf144a1ea0627b2ffd1847d3e","modified":1575125201445},{"_id":"themes/hexo-theme-next-6.4.0/docs/MATH.md","hash":"0ae4258950de01a457ea8123a8d13ec6db496e53","modified":1575125201445},{"_id":"themes/hexo-theme-next-6.4.0/languages/de.yml","hash":"fb478c5040a4e58a4c1ad5fb52a91e5983d65a3a","modified":1575125201450},{"_id":"themes/hexo-theme-next-6.4.0/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1575125201450},{"_id":"themes/hexo-theme-next-6.4.0/languages/fr.yml","hash":"0162a85ae4175e66882a9ead1249fedb89200467","modified":1575125201452},{"_id":"themes/hexo-theme-next-6.4.0/languages/en.yml","hash":"c540c3a0d7db2d4239293c8783881962640b6c34","modified":1575125201452},{"_id":"themes/hexo-theme-next-6.4.0/languages/id.yml","hash":"e7fb582e117a0785036dcdbb853a6551263d6aa6","modified":1575125201453},{"_id":"themes/hexo-theme-next-6.4.0/languages/it.yml","hash":"62ef41d0a9a3816939cb4d93a524e6930ab9c517","modified":1575125201453},{"_id":"themes/hexo-theme-next-6.4.0/languages/ja.yml","hash":"509af6c38458a402d37b9beea3500e3b439aa153","modified":1575125201453},{"_id":"themes/hexo-theme-next-6.4.0/languages/ko.yml","hash":"fae155018ae0efdf68669b2c7dd3f959c2e45cc9","modified":1575125201454},{"_id":"themes/hexo-theme-next-6.4.0/languages/nl.yml","hash":"bb9ce8adfa5ee94bc6b5fac6ad24ba4605d180d3","modified":1575125201454},{"_id":"themes/hexo-theme-next-6.4.0/languages/pt-BR.yml","hash":"bfc80c8a363fa2e8dde38ea2bc85cd19e15ab653","modified":1575125201455},{"_id":"themes/hexo-theme-next-6.4.0/languages/pt.yml","hash":"3cb51937d13ff12fcce747f972ccb664840a9ef3","modified":1575125201456},{"_id":"themes/hexo-theme-next-6.4.0/languages/ru.yml","hash":"db0644e738d2306ac38567aa183ca3e859a3980f","modified":1575125201457},{"_id":"themes/hexo-theme-next-6.4.0/languages/tr.yml","hash":"c5f0c20743b1dd52ccb256050b1397d023e6bcd9","modified":1575125201457},{"_id":"themes/hexo-theme-next-6.4.0/languages/vi.yml","hash":"8da921dd8335dd676efce31bf75fdd4af7ce6448","modified":1575125201457},{"_id":"themes/hexo-theme-next-6.4.0/languages/zh-HK.yml","hash":"7903b96912c605e630fb695534012501b2fad805","modified":1575125201458},{"_id":"themes/hexo-theme-next-6.4.0/languages/zh-CN.yml","hash":"fbbf3a0b664ae8e927c700b0a813692b94345156","modified":1575125201457},{"_id":"themes/hexo-theme-next-6.4.0/languages/zh-TW.yml","hash":"6e6d2cd8f4244cb1b349b94904cb4770935acefd","modified":1575125201458},{"_id":"themes/hexo-theme-next-6.4.0/layout/_layout.swig","hash":"1b59036ccb2ad571503b94587f458fad46775642","modified":1575125201461},{"_id":"themes/hexo-theme-next-6.4.0/layout/index.swig","hash":"c2a3896c64e96790edc10426ef586b6186a87f46","modified":1575125201476},{"_id":"themes/hexo-theme-next-6.4.0/layout/page.swig","hash":"79040bae5ec14291441b33eea341a24a7c0e9f93","modified":1575125201476},{"_id":"themes/hexo-theme-next-6.4.0/layout/archive.swig","hash":"2b6450c6b6d2bcbcd123ad9f59922a5e323d77a5","modified":1575125201475},{"_id":"themes/hexo-theme-next-6.4.0/layout/category.swig","hash":"5d955284a42f802a48560b4452c80906a5d1da02","modified":1575125201476},{"_id":"themes/hexo-theme-next-6.4.0/scripts/helpers.js","hash":"a70bfad3efda76738dab12e28e8b75e3989ee3da","modified":1575125201477},{"_id":"themes/hexo-theme-next-6.4.0/scripts/merge-configs.js","hash":"33afe97284d34542015d358a720823feeebef120","modified":1575125201477},{"_id":"themes/hexo-theme-next-6.4.0/layout/schedule.swig","hash":"3e9cba5313bf3b98a38ccb6ef78b56ffa11d66ee","modified":1575125201476},{"_id":"themes/hexo-theme-next-6.4.0/layout/post.swig","hash":"318249db246a57e9422875a2457c6acfce974ba5","modified":1575125201476},{"_id":"themes/hexo-theme-next-6.4.0/layout/tag.swig","hash":"ba402ce8fd55e80b240e019e8d8c48949b194373","modified":1575125201476},{"_id":"themes/hexo-theme-next-6.4.0/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1575125201477},{"_id":"themes/hexo-theme-next-6.4.0/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1575125201513},{"_id":"themes/hexo-theme-next-6.4.0/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1575125201513},{"_id":"themes/hexo-theme-next-6.4.0/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1575125201514},{"_id":"themes/hexo-theme-next-6.4.0/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1575125201504},{"_id":"source/assets/image/dev.jpg","hash":"85678d5a5dea8cab8460691824c3122b97751220","modified":1575125201405},{"_id":"source/assets/image/app.png","hash":"3d393d8b5f8970e345f1b4a6ea88a17db02460d8","modified":1575125201405},{"_id":"source/assets/image/status-bar-2019-10-23.png","hash":"152ad7adc71bb42c3fe21f4bc1a18c1c49bb77de","modified":1575125201436},{"_id":"source/assets/image/ios-android-bar-2019-10-23.png","hash":"389784e83c8c81ed1a30b7dc4a90fe7fe9dad17c","modified":1575125201406},{"_id":"source/assets/image/minicode02-pre.png","hash":"2c592a9c1ade7dc4319ab0ac21bbd87d662e2d39","modified":1575125201408},{"_id":"source/assets/image/process-demo.png","hash":"7524db6a94d84b626aad5e559c8f1fb7af6e242a","modified":1575125201436},{"_id":"themes/hexo-theme-next-6.4.0/docs/ru/INSTALLATION.md","hash":"6c5d69e94961c793da156217ecf1179e868d7ba1","modified":1575125201446},{"_id":"themes/hexo-theme-next-6.4.0/docs/ru/DATA-FILES.md","hash":"d6d20f60f77a76c77f8e65d0c9adbd79d0274557","modified":1575125201446},{"_id":"themes/hexo-theme-next-6.4.0/docs/ru/README.md","hash":"edfe0cfb8b2c9f0effd3beb868af9bfd0fabb3a6","modified":1575125201446},{"_id":"themes/hexo-theme-next-6.4.0/docs/ru/UPDATE-FROM-5.1.X.md","hash":"b1dd18d9b890b21718883ea1832e7e02a773104a","modified":1575125201446},{"_id":"themes/hexo-theme-next-6.4.0/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"6855402e2ef59aae307e8bd2a990647d3a605eb8","modified":1575125201446},{"_id":"themes/hexo-theme-next-6.4.0/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"a45a791b49954331390d548ac34169d573ea5922","modified":1575125201447},{"_id":"themes/hexo-theme-next-6.4.0/docs/zh-CN/CONTRIBUTING.md","hash":"bd2c955d9b7b1b45bd74a4536717d547e03fcde3","modified":1575125201447},{"_id":"themes/hexo-theme-next-6.4.0/docs/zh-CN/DATA-FILES.md","hash":"f3eec572a7d83542e2710a7404082014aaa1a5e7","modified":1575125201447},{"_id":"themes/hexo-theme-next-6.4.0/docs/zh-CN/INSTALLATION.md","hash":"b19a6e0ae96eb7c756fb5b1ba03934c7f9cbb3c3","modified":1575125201447},{"_id":"themes/hexo-theme-next-6.4.0/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"24cf2618d164440b047bb9396263de83bee5b993","modified":1575125201448},{"_id":"themes/hexo-theme-next-6.4.0/docs/zh-CN/MATH.md","hash":"e03607b608db4aa7d46f6726827c51ac16623339","modified":1575125201448},{"_id":"themes/hexo-theme-next-6.4.0/docs/zh-CN/README.md","hash":"46b264623af21211a0a9c4ba0cf1318a80eeb9fb","modified":1575125201448},{"_id":"themes/hexo-theme-next-6.4.0/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"5da70d7fa0c988a66a469b9795d33d471a4a4433","modified":1575125201448},{"_id":"themes/hexo-theme-next-6.4.0/layout/_custom/head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1575125201460},{"_id":"themes/hexo-theme-next-6.4.0/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1575125201460},{"_id":"themes/hexo-theme-next-6.4.0/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1575125201460},{"_id":"themes/hexo-theme-next-6.4.0/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1575125201462},{"_id":"themes/hexo-theme-next-6.4.0/layout/_macro/post-copyright.swig","hash":"0790ddbc349508d7ece45a9a4391d0a1cd7263cc","modified":1575125201462},{"_id":"themes/hexo-theme-next-6.4.0/layout/_macro/post-related.swig","hash":"08fe30ce8909b920540231e36c97e28cfbce62b6","modified":1575125201462},{"_id":"themes/hexo-theme-next-6.4.0/layout/_macro/reward.swig","hash":"bd5778d509c51f4b1d8da3a2bc35462929f08c75","modified":1575125201463},{"_id":"themes/hexo-theme-next-6.4.0/layout/_macro/wechat-subscriber.swig","hash":"a9e1346b83cf99e06bed59a53fc069279751e52a","modified":1575125201464},{"_id":"themes/hexo-theme-next-6.4.0/layout/_macro/sidebar.swig","hash":"1f3121ef66a4698fd78f34bf2594ef79a407c92c","modified":1575125201463},{"_id":"themes/hexo-theme-next-6.4.0/layout/_macro/post.swig","hash":"27922af64ecb9db9a28bcf1c98fb68b26bf0b67a","modified":1575125201463},{"_id":"themes/hexo-theme-next-6.4.0/layout/_scripts/boostrap.swig","hash":"0a0129e926c27fffc6e7ef87fe370016bc7a4564","modified":1575125201468},{"_id":"themes/hexo-theme-next-6.4.0/layout/_scripts/commons.swig","hash":"6fc63d5da49cb6157b8792f39c7305b55a0d1593","modified":1575125201468},{"_id":"themes/hexo-theme-next-6.4.0/layout/_scripts/vendors.swig","hash":"e0bdc723d1dc858b41fd66e44e2786e6519f259f","modified":1575125201469},{"_id":"themes/hexo-theme-next-6.4.0/layout/_partials/comments.swig","hash":"eafff2d623af8991844f34819a60e37ac11ef245","modified":1575125201464},{"_id":"themes/hexo-theme-next-6.4.0/layout/_scripts/noscript.swig","hash":"ac3ad2c0eccdf16edaa48816d111aaf51200a54b","modified":1575125201469},{"_id":"themes/hexo-theme-next-6.4.0/layout/_partials/footer.swig","hash":"05cdaf9b6cb32afd442b228cd247aaf9468a31ed","modified":1575125201465},{"_id":"themes/hexo-theme-next-6.4.0/layout/_partials/breadcrumb.swig","hash":"6994d891e064f10607bce23f6e2997db7994010e","modified":1575125201464},{"_id":"themes/hexo-theme-next-6.4.0/layout/_partials/pagination.swig","hash":"dbe321bcf3cf45917cc11a3e3f50d8572bac2c70","modified":1575125201467},{"_id":"themes/hexo-theme-next-6.4.0/layout/_partials/page-header.swig","hash":"1aaf32bed57b976c4c1913fd801be34d4838cc72","modified":1575125201467},{"_id":"themes/hexo-theme-next-6.4.0/layout/_third-party/bookmark.swig","hash":"60001c8e08b21bf3a7afaf029839e1455340e95d","modified":1575125201472},{"_id":"themes/hexo-theme-next-6.4.0/layout/_third-party/copy-code.swig","hash":"a8ab2035654dd06d94faf11a35750529e922d719","modified":1575125201473},{"_id":"themes/hexo-theme-next-6.4.0/layout/_third-party/exturl.swig","hash":"f532ce257fca6108e84b8f35329c53f272c2ce84","modified":1575125201473},{"_id":"themes/hexo-theme-next-6.4.0/layout/_third-party/needsharebutton.swig","hash":"927f19160ae14e7030df306fc7114ba777476282","modified":1575125201474},{"_id":"themes/hexo-theme-next-6.4.0/layout/_third-party/github-banner.swig","hash":"cabd9640dc3027a0b3ac06f5ebce777e50754065","modified":1575125201473},{"_id":"themes/hexo-theme-next-6.4.0/layout/_third-party/pangu.swig","hash":"6b75c5fd76ae7cf0a7b04024510bd5221607eab3","modified":1575125201474},{"_id":"themes/hexo-theme-next-6.4.0/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1575125201474},{"_id":"themes/hexo-theme-next-6.4.0/layout/_third-party/scroll-cookie.swig","hash":"b0ca46e0d1ff4c08cb0a3a8c1994f20d0260cef9","modified":1575125201474},{"_id":"themes/hexo-theme-next-6.4.0/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1575125201474},{"_id":"themes/hexo-theme-next-6.4.0/scripts/tags/button.js","hash":"4b12c376bea894d23cca0f9fcb3d6518b6db279d","modified":1575125201477},{"_id":"themes/hexo-theme-next-6.4.0/scripts/tags/center-quote.js","hash":"f13430d9d1c9773b390787c2f046bb1f12a79878","modified":1575125201477},{"_id":"themes/hexo-theme-next-6.4.0/scripts/tags/exturl.js","hash":"1412ce2ef59fa4137b697a507fd759ff067a2398","modified":1575125201478},{"_id":"themes/hexo-theme-next-6.4.0/scripts/tags/full-image.js","hash":"e282bf5a7c70b3d354001e8f66d3bef1a4fbb79e","modified":1575125201478},{"_id":"themes/hexo-theme-next-6.4.0/scripts/tags/group-pictures.js","hash":"1d59b968af4b8d147f8bc9bc295d596e41be8348","modified":1575125201478},{"_id":"themes/hexo-theme-next-6.4.0/scripts/tags/include-raw.js","hash":"5db59d56f4f4082382bf1c16722e6c383892b0c5","modified":1575125201478},{"_id":"themes/hexo-theme-next-6.4.0/scripts/tags/label.js","hash":"f0ecd3b5773b19a6bd93a819dfe0c49ee418e4de","modified":1575125201478},{"_id":"themes/hexo-theme-next-6.4.0/scripts/tags/note.js","hash":"adb945ba93ac487d46b969ca4e59d3681b8f8d1c","modified":1575125201478},{"_id":"themes/hexo-theme-next-6.4.0/scripts/tags/tabs.js","hash":"e37761253d68a29593fe9ed2fe403f49b6e971de","modified":1575125201478},{"_id":"themes/hexo-theme-next-6.4.0/source/css/main.styl","hash":"c26ca6e7b5bd910b9046d6722c8e00be672890e0","modified":1575125201504},{"_id":"themes/hexo-theme-next-6.4.0/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1575125201504},{"_id":"themes/hexo-theme-next-6.4.0/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1575125201505},{"_id":"themes/hexo-theme-next-6.4.0/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1575125201505},{"_id":"themes/hexo-theme-next-6.4.0/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1575125201505},{"_id":"themes/hexo-theme-next-6.4.0/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1575125201505},{"_id":"themes/hexo-theme-next-6.4.0/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1575125201505},{"_id":"themes/hexo-theme-next-6.4.0/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1575125201506},{"_id":"themes/hexo-theme-next-6.4.0/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1575125201506},{"_id":"themes/hexo-theme-next-6.4.0/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1575125201507},{"_id":"themes/hexo-theme-next-6.4.0/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1575125201506},{"_id":"themes/hexo-theme-next-6.4.0/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1575125201506},{"_id":"themes/hexo-theme-next-6.4.0/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1575125201507},{"_id":"themes/hexo-theme-next-6.4.0/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1575125201507},{"_id":"themes/hexo-theme-next-6.4.0/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1575125201507},{"_id":"themes/hexo-theme-next-6.4.0/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1575125201507},{"_id":"themes/hexo-theme-next-6.4.0/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1575125201507},{"_id":"themes/hexo-theme-next-6.4.0/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1575125201507},{"_id":"themes/hexo-theme-next-6.4.0/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1575125201508},{"_id":"themes/hexo-theme-next-6.4.0/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1575125201469},{"_id":"themes/hexo-theme-next-6.4.0/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1575125201469},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1575125201495},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1575125201495},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1575125201496},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1575125201503},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1575125201503},{"_id":"source/assets/image/ios-android-status-bar-2019-10-23.png","hash":"037ca5c8040b3c62951e1fb2fc5811182875e03a","modified":1575125201407},{"_id":"themes/hexo-theme-next-6.4.0/layout/_macro/menu/menu-badge.swig","hash":"65c5e585982dae7ae1542cada71858b4ea1f73d6","modified":1575125201461},{"_id":"themes/hexo-theme-next-6.4.0/layout/_macro/menu/menu-item.swig","hash":"d1b73c926109145e52605929b75914cc8b60fb89","modified":1575125201461},{"_id":"themes/hexo-theme-next-6.4.0/layout/_scripts/pages/post-details.swig","hash":"cc865af4a3cb6d25a0be171b7fc919ade306bb50","modified":1575125201469},{"_id":"themes/hexo-theme-next-6.4.0/layout/_scripts/schemes/gemini.swig","hash":"ea03fe9c98ddcfcc0ecfdbe5a2b622f9cde3b3a1","modified":1575125201469},{"_id":"themes/hexo-theme-next-6.4.0/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1575125201465},{"_id":"themes/hexo-theme-next-6.4.0/layout/_partials/head/head-unique.swig","hash":"a7e376b087ae77f2e2a61ba6af81cde5af693174","modified":1575125201465},{"_id":"themes/hexo-theme-next-6.4.0/layout/_scripts/schemes/pisces.swig","hash":"ea03fe9c98ddcfcc0ecfdbe5a2b622f9cde3b3a1","modified":1575125201469},{"_id":"themes/hexo-theme-next-6.4.0/layout/_partials/head/head.swig","hash":"58a4e34583c2e46179e1ffec627d1066a30459d6","modified":1575125201465},{"_id":"themes/hexo-theme-next-6.4.0/layout/_partials/header/brand.swig","hash":"fd780171713aada5eb4f4ffed8e714617c8ae6be","modified":1575125201466},{"_id":"themes/hexo-theme-next-6.4.0/layout/_partials/header/index.swig","hash":"2082f5077551123e695e8afec471c9c44b436acb","modified":1575125201466},{"_id":"themes/hexo-theme-next-6.4.0/layout/_partials/header/menu.swig","hash":"3db735d0cd2d449edf2674310ac1e7c0043cb357","modified":1575125201466},{"_id":"themes/hexo-theme-next-6.4.0/layout/_partials/header/sub-menu.swig","hash":"88b4b6051592d26bff59788acb76346ce4e398c2","modified":1575125201466},{"_id":"themes/hexo-theme-next-6.4.0/layout/_partials/search/index.swig","hash":"a33b29ccbdc2248aedff23b04e0627f435824406","modified":1575125201467},{"_id":"themes/hexo-theme-next-6.4.0/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1575125201467},{"_id":"themes/hexo-theme-next-6.4.0/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1575125201468},{"_id":"themes/hexo-theme-next-6.4.0/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1575125201467},{"_id":"themes/hexo-theme-next-6.4.0/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1575125201470},{"_id":"themes/hexo-theme-next-6.4.0/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1575125201470},{"_id":"themes/hexo-theme-next-6.4.0/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1575125201468},{"_id":"themes/hexo-theme-next-6.4.0/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1575125201468},{"_id":"themes/hexo-theme-next-6.4.0/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1575125201468},{"_id":"themes/hexo-theme-next-6.4.0/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1575125201470},{"_id":"themes/hexo-theme-next-6.4.0/layout/_third-party/analytics/busuanzi-counter.swig","hash":"67f0cb55e6702c492e99a9f697827629da036a0c","modified":1575125201471},{"_id":"themes/hexo-theme-next-6.4.0/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1575125201471},{"_id":"themes/hexo-theme-next-6.4.0/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1575125201471},{"_id":"themes/hexo-theme-next-6.4.0/layout/_third-party/analytics/firestore.swig","hash":"94b26dfbcd1cf2eb87dd9752d58213338926af27","modified":1575125201471},{"_id":"themes/hexo-theme-next-6.4.0/layout/_third-party/analytics/google-analytics.swig","hash":"beb53371c035b62e1a2c7bb76c63afbb595fe6e5","modified":1575125201471},{"_id":"themes/hexo-theme-next-6.4.0/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1575125201471},{"_id":"themes/hexo-theme-next-6.4.0/layout/_third-party/analytics/lean-analytics.swig","hash":"43f70cdc999c66b9c7889a13150ec63e99b1fdd0","modified":1575125201471},{"_id":"themes/hexo-theme-next-6.4.0/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1575125201472},{"_id":"themes/hexo-theme-next-6.4.0/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1575125201472},{"_id":"themes/hexo-theme-next-6.4.0/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1575125201472},{"_id":"themes/hexo-theme-next-6.4.0/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1575125201472},{"_id":"themes/hexo-theme-next-6.4.0/layout/_third-party/comments/gitment.swig","hash":"fe8177e4698df764e470354b6acde8292a3515e0","modified":1575125201473},{"_id":"themes/hexo-theme-next-6.4.0/layout/_third-party/comments/disqus.swig","hash":"8878241797f8494a70968756c57cacdfc77b61c7","modified":1575125201472},{"_id":"themes/hexo-theme-next-6.4.0/layout/_third-party/comments/index.swig","hash":"03e83f1311faafb7dddc2899042ed1cacd5c995e","modified":1575125201473},{"_id":"themes/hexo-theme-next-6.4.0/layout/_third-party/comments/livere.swig","hash":"88b5a808b6b254c6122444e9dc180d5cc459cb19","modified":1575125201473},{"_id":"themes/hexo-theme-next-6.4.0/layout/_third-party/comments/valine.swig","hash":"34421679cae6581697cd3ab7c3729eb220e3e3f5","modified":1575125201473},{"_id":"themes/hexo-theme-next-6.4.0/layout/_third-party/math/index.swig","hash":"a6fc00ec7f5642aabd66aa1cf51c6acc5b10e012","modified":1575125201473},{"_id":"themes/hexo-theme-next-6.4.0/layout/_third-party/math/mathjax.swig","hash":"9b9ff4cc6d5474ab03f09835a2be80e0dba9fe89","modified":1575125201474},{"_id":"themes/hexo-theme-next-6.4.0/layout/_third-party/math/katex.swig","hash":"97dbc2035bcb5aa7eafb80a4202dc827cce34983","modified":1575125201474},{"_id":"themes/hexo-theme-next-6.4.0/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1575125201475},{"_id":"themes/hexo-theme-next-6.4.0/layout/_third-party/search/localsearch.swig","hash":"b15e10abe85b4270860a56c970b559baa258b2a8","modified":1575125201475},{"_id":"themes/hexo-theme-next-6.4.0/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1575125201475},{"_id":"themes/hexo-theme-next-6.4.0/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1575125201475},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1575125201495},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1575125201495},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_mixins/Pisces.styl","hash":"2640a54fa63bdd4c547eab7ce2fc1192cf0ccec8","modified":1575125201496},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_mixins/base.styl","hash":"51c2907e5c50c2614419b670fbdec183ae7f7f5d","modified":1575125201496},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_variables/Gemini.styl","hash":"e1f6f59ad6e562dfe640ee4ed5d1ac9b6aba4114","modified":1575125201503},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_variables/Pisces.styl","hash":"c167eeb6b736f7b021fba98c38c2c21032ee1255","modified":1575125201503},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_variables/base.styl","hash":"0b43ddd92e395342703550f629699c5e591fd68b","modified":1575125201503},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1575125201503},{"_id":"themes/hexo-theme-next-6.4.0/source/js/src/affix.js","hash":"a2aab233d99297435a5274bf512c3c753fe08e80","modified":1575125201508},{"_id":"themes/hexo-theme-next-6.4.0/source/js/src/bootstrap.js","hash":"1c41508b83cb0c4512e64b4d63afa1be954ce8ef","modified":1575125201508},{"_id":"themes/hexo-theme-next-6.4.0/source/js/src/exturl.js","hash":"54825acc8de4793feac415be227b965428f4e97d","modified":1575125201508},{"_id":"themes/hexo-theme-next-6.4.0/source/js/src/algolia-search.js","hash":"1f7f10c579e7703d0f6acb8b73f3d78a07d0c623","modified":1575125201508},{"_id":"themes/hexo-theme-next-6.4.0/source/js/src/motion.js","hash":"52fd093cb96b68229b38436c9b8ebcefc7e12cb2","modified":1575125201509},{"_id":"themes/hexo-theme-next-6.4.0/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1575125201509},{"_id":"themes/hexo-theme-next-6.4.0/source/js/src/post-details.js","hash":"0dde5e6d4547587662a3256317a9d5d1db507692","modified":1575125201509},{"_id":"themes/hexo-theme-next-6.4.0/source/js/src/scrollspy.js","hash":"fa3c92968bcdbcb8d95a1729f7659d9753cbd077","modified":1575125201510},{"_id":"themes/hexo-theme-next-6.4.0/source/js/src/utils.js","hash":"e829806d054991d0324a339993082206ca6026e5","modified":1575125201510},{"_id":"themes/hexo-theme-next-6.4.0/source/js/src/scroll-cookie.js","hash":"d07b3776708d4ae79ed2037c4c7391d5c9b06b19","modified":1575125201510},{"_id":"themes/hexo-theme-next-6.4.0/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1575125201512},{"_id":"themes/hexo-theme-next-6.4.0/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1575125201513},{"_id":"themes/hexo-theme-next-6.4.0/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1575125201513},{"_id":"source/assets/image/landpage-create-2019-11-30.png","hash":"5616e6515e1c201b9ec5fe96e41cf758bcab1e2b","modified":1575206328091},{"_id":"themes/hexo-theme-next-6.4.0/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1575125201511},{"_id":"themes/hexo-theme-next-6.4.0/layout/_third-party/search/algolia-search/assets.swig","hash":"6958a97fde63e03983ec2394a4f8e408860fb42b","modified":1575125201475},{"_id":"themes/hexo-theme-next-6.4.0/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1575125201475},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1575125201479},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1575125201479},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1575125201479},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1575125201479},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_common/components/back-to-top-sidebar.styl","hash":"4719ce717962663c5c33ef97b1119a0b3a4ecdc3","modified":1575125201479},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1575125201483},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1575125201489},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_common/outline/outline.styl","hash":"aebbd86500d819c4532ab290c62b6f432bc2f878","modified":1575125201493},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_common/scaffolding/base.styl","hash":"18309b68ff33163a6f76a39437e618bb6ed411f8","modified":1575125201493},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1575125201493},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1575125201494},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1575125201494},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_common/scaffolding/tables.styl","hash":"0810e7c43d6c8adc8434a8fa66eabe0436ab8178","modified":1575125201494},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_common/scaffolding/mobile.styl","hash":"47a46583a1f3731157a3f53f80ed1ed5e2753e8e","modified":1575125201494},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_schemes/Gemini/index.styl","hash":"fca5320e2644edcd663888863899d1b80352439b","modified":1575125201496},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_schemes/Mist/_base.styl","hash":"0bef9f0dc134215bc4d0984ba3a16a1a0b6f87ec","modified":1575125201497},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1575125201497},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_schemes/Mist/_posts-expanded.styl","hash":"2212511ae14258d93bec57993c0385e5ffbb382b","modified":1575125201497},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_schemes/Mist/_menu.styl","hash":"f43c821ea272f80703862260b140932fe4aa0e1f","modified":1575125201497},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1575125201497},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1575125201498},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_schemes/Mist/index.styl","hash":"5e12572b18846250e016a872a738026478ceef37","modified":1575125201498},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1575125201499},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1575125201499},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_schemes/Muse/_menu.styl","hash":"35f093fe4c1861661ac1542d6e8ea5a9bbfeb659","modified":1575125201499},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1575125201501},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_schemes/Pisces/_layout.styl","hash":"876b5d99061025cf485a3cac440624ded5734319","modified":1575125201501},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_schemes/Pisces/_menu.styl","hash":"05a5abf02e84ba8f639b6f9533418359f0ae4ecb","modified":1575125201502},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_schemes/Pisces/_sidebar.styl","hash":"41f9cdafa00e256561c50ae0b97ab7fcd7c1d6a2","modified":1575125201502},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_schemes/Pisces/_sub-menu.styl","hash":"ffa870c3fa37a48b01dc6f967e66f5df508d02bf","modified":1575125201502},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1575125201500},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_schemes/Muse/index.styl","hash":"d5e8ea6336bc2e237d501ed0d5bbcbbfe296c832","modified":1575125201500},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1575125201502},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_schemes/Pisces/index.styl","hash":"5779cc8086b1cfde9bc4f1afdd85223bdc45f0a0","modified":1575125201502},{"_id":"themes/hexo-theme-next-6.4.0/source/js/src/schemes/pisces.js","hash":"ab6f13fae0513a9b39f8d8c4c3a4e3928014f046","modified":1575125201510},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_common/components/footer/footer.styl","hash":"39dee82d481dd9d44e33658960ec63e47cd0a715","modified":1575125201480},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_common/components/header/header.styl","hash":"7cc3f36222494c9a1325c5347d7eb9ae53755a32","modified":1575125201480},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1575125201480},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1575125201480},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1575125201480},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1575125201480},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1575125201481},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_common/components/highlight/highlight.styl","hash":"17b95828f9db7f131ec0361a8c0e89b0b5c9bff5","modified":1575125201481},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1575125201481},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1575125201481},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_common/components/header/github-banner.styl","hash":"ee37e6c465b9b2a7e39175fccfcbed14f2db039b","modified":1575125201480},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_common/components/pages/breadcrumb.styl","hash":"7dd9a0378ccff3e4a2003f486b1a34e74c20dac6","modified":1575125201481},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1575125201481},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_common/components/pages/pages.styl","hash":"fb451dc4cc0355b57849c27d3eb110c73562f794","modified":1575125201482},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1575125201482},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1575125201482},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"35c0350096921dd8e2222ec41b6c17a4ea6b44f2","modified":1575125201487},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_common/components/sidebar/sidebar-author.styl","hash":"bbe0d111f6451fc04e52719fd538bd0753ec17f9","modified":1575125201487},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1575125201487},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1575125201488},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1575125201488},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"4427ed3250483ed5b7baad74fa93474bd1eda729","modified":1575125201488},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1575125201488},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_common/components/sidebar/sidebar.styl","hash":"43bc58daa8d35d5d515dc787ceb21dd77633fe49","modified":1575125201488},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1575125201488},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1575125201483},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1575125201484},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1575125201484},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_common/components/post/post-expand.styl","hash":"193d136b50da1035f23078d2a057fa7582a5c4cf","modified":1575125201484},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1575125201484},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_common/components/post/post-meta.styl","hash":"417f05ff12a2aaca6ceeac8b7e7eb26e9440c4c3","modified":1575125201485},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1575125201485},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1575125201488},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1575125201484},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1575125201486},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1575125201486},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_common/components/post/post-title.styl","hash":"c0ac49fadd33ca4a9a0a04d5ff2ac6560d0ecd9e","modified":1575125201486},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1575125201486},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_common/components/post/post.styl","hash":"ed9608d2740a33664eb703f806c218a4fc520087","modified":1575125201487},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_common/components/post/post-reading_progress.styl","hash":"f4e9f870baa56eae423a123062f00e24cc780be1","modified":1575125201485},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1575125201491},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_common/components/post/post-widgets.styl","hash":"578bb2d5f24cad39205bbafb4c39c7e9962b9fa9","modified":1575125201487},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1575125201491},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_common/components/third-party/algolia-search.styl","hash":"10e9bb3392826a5a8f4cabfc14c6d81645f33fe6","modified":1575125201491},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_common/components/post/post-reward.styl","hash":"549a8a0b5301d32acd86a97f17340cdfcd46fb63","modified":1575125201486},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1575125201491},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_common/components/third-party/third-party.styl","hash":"1c18c91ab3c60169ebe654c80c968fd8458786a3","modified":1575125201492},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1575125201491},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1575125201489},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_common/components/third-party/related-posts.styl","hash":"76937db9702053d772f6758d9cea4088c2a6e2a3","modified":1575125201492},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1575125201492},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_common/components/tags/full-image.styl","hash":"6ec8ea7b11a146777b6b8da0f71f0cc1dbd129df","modified":1575125201490},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1575125201490},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1575125201490},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_common/components/tags/exturl.styl","hash":"cf2185a0ea170fd8450f592e859a6c941141e5ee","modified":1575125201489},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1575125201490},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1575125201490},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1575125201490},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1575125201491},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1575125201498},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1575125201498},{"_id":"themes/hexo-theme-next-6.4.0/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1575125201500},{"_id":"themes/hexo-theme-next-6.4.0/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1575125201512},{"_id":"source/assets/image/navigation-video-2019-10-25.gif","hash":"a385f06cc3c141d667a16661094bf4eab034889d","modified":1575125201435},{"_id":"public/about/index.html","hash":"88c652268af11067fdcfb5cb2521fd8907e9fd66","modified":1575213055816},{"_id":"public/tags/index.html","hash":"2d5f494fb6dae62a314d2df75c9469b94a8281e0","modified":1575213055816},{"_id":"public/categories/index.html","hash":"972953bfc90454e15e2d75c978c563451d7429ba","modified":1575213055816},{"_id":"public/archives/2018/index.html","hash":"a8d7a02390ca588018f58671569dca271dd25856","modified":1575213055816},{"_id":"public/archives/2018/08/index.html","hash":"c480cdef6b874dbda1bb1d5c3525cdd7d8199e83","modified":1575213055816},{"_id":"public/archives/2018/09/index.html","hash":"1d193495a6ffef3b54858bcdf60fa6891469fd0d","modified":1575213055816},{"_id":"public/archives/2019/index.html","hash":"bb1b26dec641132e38006453885122d8fd7ada4b","modified":1575213055816},{"_id":"public/archives/2019/09/index.html","hash":"f35ccfb1997d72cb5114f9cbdf344f15879982e2","modified":1575213055816},{"_id":"public/archives/2019/10/index.html","hash":"fb2c9fde0b1734940b9852c5560e96e2788b515f","modified":1575213055816},{"_id":"public/archives/2019/11/index.html","hash":"9878f97e5ac1206ead001ddb259b76f5cd1decf8","modified":1575213055816},{"_id":"public/categories/区块链/index.html","hash":"4bebc59aab278deabfac5853b3624e232c8728fc","modified":1575213055817},{"_id":"public/categories/前端技术/index.html","hash":"e16084fe4ee9c95e3cf18e30dd4129e2fe39b169","modified":1575213055817},{"_id":"public/tags/区块链/index.html","hash":"d0c56bc62e9dfc1e286027624657312fa97175b7","modified":1575213055817},{"_id":"public/tags/Gas/index.html","hash":"edd5a91f357a84b2baab6cc2a7625188d50064c2","modified":1575213055817},{"_id":"public/tags/以太坊Gas/index.html","hash":"606020c63f57642dbf3e74c624d51ac21b8a3e43","modified":1575213055817},{"_id":"public/tags/Vue/index.html","hash":"d5290f3538d2001cbd52fb3f8ee0c305bf2b77ba","modified":1575213055817},{"_id":"public/tags/WebFont/index.html","hash":"348e0c05a8d843f3353d5fae80bc934c3c4dc357","modified":1575213055817},{"_id":"public/tags/字体库/index.html","hash":"27973c0f56032ded042f3cc1669fe9f8015c5d57","modified":1575213055817},{"_id":"public/tags/伪元素/index.html","hash":"c34ec4531274aa22d95cecb5a49af8e2c21168d1","modified":1575213055817},{"_id":"public/tags/手机端点击区域过小/index.html","hash":"a84946e9c0b87cfdc40bea06a4ca76e5ba0a442f","modified":1575213055817},{"_id":"public/tags/放大点击区域/index.html","hash":"631785ab25495d17cefffe1b93d07c2c167e99ee","modified":1575213055817},{"_id":"public/tags/小程序/index.html","hash":"5831751c12b16a821a483057b68fbc59fde0a21f","modified":1575213055817},{"_id":"public/tags/消去IOS橡皮筋/index.html","hash":"d3da8aa3a083b4d6b0605a7fd855f84475dc076a","modified":1575213055817},{"_id":"public/tags/小程序中IOS橡皮筋效果的坑/index.html","hash":"a402791b69591fe48f8df11f484cfa07b64cae42","modified":1575213055817},{"_id":"public/tags/自定义导航组件/index.html","hash":"69b4943d0c4053e32be087000dd41dc7fa7bed1e","modified":1575213055817},{"_id":"public/tags/顶部导航组件实现原理/index.html","hash":"455ac170e02fe247d08ec80710c4c7ac407c396f","modified":1575213055817},{"_id":"public/tags/小程序导航组件的坑/index.html","hash":"b42552d5fcbe3fb180a90a52e950d69c0cfa29d2","modified":1575213055817},{"_id":"public/tags/可视化页面编辑/index.html","hash":"5044c54dce955dbec11ded78695000ce79e3af34","modified":1575213055817},{"_id":"public/tags/落地页管理/index.html","hash":"6aec7a0810a8aaa4b7319462608d8ec93180e898","modified":1575213055817},{"_id":"public/tags/页面组件化/index.html","hash":"7b23ea7367611b14a5d9f6102abd0a83f362a33d","modified":1575213055817},{"_id":"public/tags/页面可视化/index.html","hash":"3eb75076b30fc6b2bbb06518f222d90a0c819352","modified":1575213055817},{"_id":"public/2019/11/30/可视化页面编辑管理系统开发实践分享/index.html","hash":"e2649fce68c3c2fd499c1f19ba7d7bebf350dabf","modified":1575213055817},{"_id":"public/2019/11/27/巧用伪元素放大手机端点击焦点/index.html","hash":"45e1ae1342619da1bcda54cf9588cafcdacc8cbb","modified":1575213055818},{"_id":"public/2019/10/25/小程序头部自定义导航组件实现原理及坑分享/index.html","hash":"26ba712b9786ef39319136c049eadcbae8c36158","modified":1575213055818},{"_id":"public/2019/09/22/小程序取消橡皮筋回弹效果解决方案及坑总结/index.html","hash":"d8fe28184bed14ef95aa5d6fb2505b380eebd72d","modified":1575213055818},{"_id":"public/2018/09/10/如何在Vue项目中使用压缩字体库/index.html","hash":"154e842a00b1ea43baa9036c76678e7b3d8d64a0","modified":1575213055818},{"_id":"public/2018/08/18/一分钟理清GasGas、PriceGas、Limit/index.html","hash":"36525fcddb43858eaca6bd852894831293ce03d7","modified":1575213055818},{"_id":"public/archives/index.html","hash":"a35389248a903eaf4ff390a4706561977b4cff65","modified":1575213055818},{"_id":"public/index.html","hash":"09569162715aac2c79595a926d5273bd40e0d27e","modified":1575213055818},{"_id":"public/assets/image/dev.jpg","hash":"85678d5a5dea8cab8460691824c3122b97751220","modified":1575213055822},{"_id":"public/assets/image/status-bar-2019-10-23.png","hash":"152ad7adc71bb42c3fe21f4bc1a18c1c49bb77de","modified":1575213055822},{"_id":"public/assets/image/ios-android-bar-2019-10-23.png","hash":"389784e83c8c81ed1a30b7dc4a90fe7fe9dad17c","modified":1575213055822},{"_id":"public/assets/image/app.png","hash":"3d393d8b5f8970e345f1b4a6ea88a17db02460d8","modified":1575213055822},{"_id":"public/assets/image/minicode02-pre.png","hash":"2c592a9c1ade7dc4319ab0ac21bbd87d662e2d39","modified":1575213055822},{"_id":"public/assets/image/process-demo.png","hash":"7524db6a94d84b626aad5e559c8f1fb7af6e242a","modified":1575213055822},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1575213055822},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1575213055822},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1575213055822},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1575213055822},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1575213055822},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1575213055822},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1575213055822},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1575213055822},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1575213055822},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1575213055822},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1575213055823},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1575213055823},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1575213055823},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1575213055823},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1575213055823},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1575213055823},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1575213055823},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1575213055823},{"_id":"public/js/src/affix.js","hash":"a2aab233d99297435a5274bf512c3c753fe08e80","modified":1575213056291},{"_id":"public/js/src/bootstrap.js","hash":"1c41508b83cb0c4512e64b4d63afa1be954ce8ef","modified":1575213056291},{"_id":"public/js/src/algolia-search.js","hash":"1f7f10c579e7703d0f6acb8b73f3d78a07d0c623","modified":1575213056291},{"_id":"public/js/src/exturl.js","hash":"54825acc8de4793feac415be227b965428f4e97d","modified":1575213056291},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1575213056291},{"_id":"public/js/src/scrollspy.js","hash":"fa3c92968bcdbcb8d95a1729f7659d9753cbd077","modified":1575213056291},{"_id":"public/js/src/post-details.js","hash":"0dde5e6d4547587662a3256317a9d5d1db507692","modified":1575213056291},{"_id":"public/js/src/scroll-cookie.js","hash":"d07b3776708d4ae79ed2037c4c7391d5c9b06b19","modified":1575213056291},{"_id":"public/js/src/schemes/pisces.js","hash":"ab6f13fae0513a9b39f8d8c4c3a4e3928014f046","modified":1575213056291},{"_id":"public/css/main.css","hash":"f787283b7265b0303af2f1554f6e4f579f78062d","modified":1575213056291},{"_id":"public/js/src/motion.js","hash":"52fd093cb96b68229b38436c9b8ebcefc7e12cb2","modified":1575213056294},{"_id":"public/js/src/utils.js","hash":"e829806d054991d0324a339993082206ca6026e5","modified":1575213056294},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1575213056294},{"_id":"public/assets/image/ios-android-status-bar-2019-10-23.png","hash":"037ca5c8040b3c62951e1fb2fc5811182875e03a","modified":1575213056294},{"_id":"public/assets/image/landpage-create-2019-11-30.png","hash":"5616e6515e1c201b9ec5fe96e41cf758bcab1e2b","modified":1575213056296},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1575213056299},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1575213056299},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1575213056318},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1575213056340},{"_id":"public/assets/image/navigation-video-2019-10-25.gif","hash":"a385f06cc3c141d667a16661094bf4eab034889d","modified":1575213056347}],"Category":[{"name":"区块链","_id":"ck3n56j5200027z7xp2te5f1l"},{"name":"前端技术","_id":"ck3n56j5700077z7xgx63u8l4"}],"Data":[],"Page":[{"title":"关于作者","date":"2018-09-01T08:07:04.000Z","_content":"\n\n> Email: YuniorZen@qq.com","source":"about/index.md","raw":"---\ntitle: 关于作者\ndate: 2018-09-01 16:07:04\n---\n\n\n> Email: YuniorZen@qq.com","updated":"2019-11-30T14:46:41.404Z","path":"about/index.html","comments":1,"layout":"page","_id":"ck3n56ja1001a7z7x52di1a9c","content":"<blockquote>\n<p>Email: <a href=\"mailto:YuniorZen@qq.com\" target=\"_blank\" rel=\"noopener\">YuniorZen@qq.com</a></p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>Email: <a href=\"mailto:YuniorZen@qq.com\" target=\"_blank\" rel=\"noopener\">YuniorZen@qq.com</a></p>\n</blockquote>\n"},{"title":"分类","date":"2018-09-01T08:14:36.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2018-09-01 16:14:36\ntype: categories\n---\n","updated":"2019-11-30T14:46:41.436Z","path":"categories/index.html","comments":1,"layout":"page","_id":"ck3n56ja2001b7z7x6fixl2nt","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"标签","date":"2018-09-01T08:13:58.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2018-09-01 16:13:58\ntype: tags\n---\n","updated":"2019-11-30T14:46:41.436Z","path":"tags/index.html","comments":1,"layout":"page","_id":"ck3n56ja4001d7z7x8fpmbawt","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"一分钟理清 Gas/Gas Price/Gas Limit","date":"2018-08-18T08:27:30.000Z","_content":"\n好多朋友第一次接触以太坊的时候，都会搞不清什么是Gas，更搞不清Gas Price和Gas Limit是什么。 本文将逐一介绍并理清这三者之间的关系，相信你看完后就会理解这三个gas相关的概念了。\n\n## Gas\n>   Gas对应于一个交易(Transaction)中以太坊虚拟机(EVM)的实际运算步数。 越简单的交易，例如单纯的 以太币转帐交易，需要的运算步数越少， Gas亦会需要的少一点。 反之，如果要计算一些复杂运算，Gas的消耗 量就会大。 所以你提交的交易需要EVM进行的计算量越大，所需的Gas消耗量就越高了。\n\n\n## Gas Price\n>   Gas Price就是你愿意为一个单位的Gas出多少Eth，一般用Gwei作单位。 所以Gas Price 越高， 就表示交易中每运算一步，会支付更多的Eth。\n\n大家可能对Gwei 这个单位感到陌生，Gwei 其实就是10 ^ -9 Eth，也就是说1 Gwei = 0.000000001 Eth。 所以，当你设定Gas price = 20 Gwei ，就意味着你愿意为单步运算支付0.00000002 Eth。\n\n说到这里，聪明如你就会意识到以太坊的手续费计算公式很简单\n\n>   交易手续费(Tx Fee) = 实际运行步数(Actual Gas Used) * 单步价格(Gas Price)\n\n例如你的交易需要以太坊执行50步完成运算，假设你设定的Gas Price是2 Gwei ，那么整个交易的手续费 就是50 * 2 = 100 Gwei 了。\n\n## Gas Limit\n>   Gas Limit就是一次交易中Gas的可用上限，也就是你的交易中最多会执行多少步运算。 由于交易复杂程度各有不同， 确切的Gas消耗量是在完成交易后才会知道，因此在你提交交易之前，需要为交易设定一个Gas用量的上限。\n\n\n如果说你提交的交易尚未完成，消耗的Gas就已经超过你设定的Gas Limit，那么这次交易就会被取消，而 已经消耗的手续费同样被扣取 —— 因为要奖励已经付出劳动的矿工。 而如果交易已经完成，消耗的Gas未达到Gas Limit， 那么只会按实际消耗的Gas 收取交易服务费。 换句话说，一个交易可能被收取的最高服务费就是Gas Limit * Gas​​ Price 了。\n\n\n***\n\n最后值得一提的是Gas Price 越高，你提交的交易会越快被矿工接纳。 但通常人们都不愿多支付手续费， 那么究竟应该将Gas Price设置为多少，才可以在正常时间(eg 10 mins)内，确保交易被确认到区域链上呢？[这个网站](http://ethgasstation.info/)可以帮到你。 写这篇文章时候，1 Gwei的Gas Price 就可以确保 交易在50 秒左右被接纳。","source":"_posts/一分钟理清GasGas、PriceGas、Limit.md","raw":"---\ntitle: 一分钟理清 Gas/Gas Price/Gas Limit\ndate: 2018-08-18 16:27:30\ncategories: 区块链\ntags:\n    - 区块链\n    - Gas\n    - 以太坊Gas\n---\n\n好多朋友第一次接触以太坊的时候，都会搞不清什么是Gas，更搞不清Gas Price和Gas Limit是什么。 本文将逐一介绍并理清这三者之间的关系，相信你看完后就会理解这三个gas相关的概念了。\n\n## Gas\n>   Gas对应于一个交易(Transaction)中以太坊虚拟机(EVM)的实际运算步数。 越简单的交易，例如单纯的 以太币转帐交易，需要的运算步数越少， Gas亦会需要的少一点。 反之，如果要计算一些复杂运算，Gas的消耗 量就会大。 所以你提交的交易需要EVM进行的计算量越大，所需的Gas消耗量就越高了。\n\n\n## Gas Price\n>   Gas Price就是你愿意为一个单位的Gas出多少Eth，一般用Gwei作单位。 所以Gas Price 越高， 就表示交易中每运算一步，会支付更多的Eth。\n\n大家可能对Gwei 这个单位感到陌生，Gwei 其实就是10 ^ -9 Eth，也就是说1 Gwei = 0.000000001 Eth。 所以，当你设定Gas price = 20 Gwei ，就意味着你愿意为单步运算支付0.00000002 Eth。\n\n说到这里，聪明如你就会意识到以太坊的手续费计算公式很简单\n\n>   交易手续费(Tx Fee) = 实际运行步数(Actual Gas Used) * 单步价格(Gas Price)\n\n例如你的交易需要以太坊执行50步完成运算，假设你设定的Gas Price是2 Gwei ，那么整个交易的手续费 就是50 * 2 = 100 Gwei 了。\n\n## Gas Limit\n>   Gas Limit就是一次交易中Gas的可用上限，也就是你的交易中最多会执行多少步运算。 由于交易复杂程度各有不同， 确切的Gas消耗量是在完成交易后才会知道，因此在你提交交易之前，需要为交易设定一个Gas用量的上限。\n\n\n如果说你提交的交易尚未完成，消耗的Gas就已经超过你设定的Gas Limit，那么这次交易就会被取消，而 已经消耗的手续费同样被扣取 —— 因为要奖励已经付出劳动的矿工。 而如果交易已经完成，消耗的Gas未达到Gas Limit， 那么只会按实际消耗的Gas 收取交易服务费。 换句话说，一个交易可能被收取的最高服务费就是Gas Limit * Gas​​ Price 了。\n\n\n***\n\n最后值得一提的是Gas Price 越高，你提交的交易会越快被矿工接纳。 但通常人们都不愿多支付手续费， 那么究竟应该将Gas Price设置为多少，才可以在正常时间(eg 10 mins)内，确保交易被确认到区域链上呢？[这个网站](http://ethgasstation.info/)可以帮到你。 写这篇文章时候，1 Gwei的Gas Price 就可以确保 交易在50 秒左右被接纳。","slug":"一分钟理清GasGas、PriceGas、Limit","published":1,"updated":"2019-11-30T14:46:41.402Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3n56j4w00007z7xji2wvcfn","content":"<p>好多朋友第一次接触以太坊的时候，都会搞不清什么是Gas，更搞不清Gas Price和Gas Limit是什么。 本文将逐一介绍并理清这三者之间的关系，相信你看完后就会理解这三个gas相关的概念了。</p>\n<h2 id=\"Gas\"><a href=\"#Gas\" class=\"headerlink\" title=\"Gas\"></a>Gas</h2><blockquote>\n<p>  Gas对应于一个交易(Transaction)中以太坊虚拟机(EVM)的实际运算步数。 越简单的交易，例如单纯的 以太币转帐交易，需要的运算步数越少， Gas亦会需要的少一点。 反之，如果要计算一些复杂运算，Gas的消耗 量就会大。 所以你提交的交易需要EVM进行的计算量越大，所需的Gas消耗量就越高了。</p>\n</blockquote>\n<h2 id=\"Gas-Price\"><a href=\"#Gas-Price\" class=\"headerlink\" title=\"Gas Price\"></a>Gas Price</h2><blockquote>\n<p>  Gas Price就是你愿意为一个单位的Gas出多少Eth，一般用Gwei作单位。 所以Gas Price 越高， 就表示交易中每运算一步，会支付更多的Eth。</p>\n</blockquote>\n<p>大家可能对Gwei 这个单位感到陌生，Gwei 其实就是10 ^ -9 Eth，也就是说1 Gwei = 0.000000001 Eth。 所以，当你设定Gas price = 20 Gwei ，就意味着你愿意为单步运算支付0.00000002 Eth。</p>\n<p>说到这里，聪明如你就会意识到以太坊的手续费计算公式很简单</p>\n<blockquote>\n<p>  交易手续费(Tx Fee) = 实际运行步数(Actual Gas Used) * 单步价格(Gas Price)</p>\n</blockquote>\n<p>例如你的交易需要以太坊执行50步完成运算，假设你设定的Gas Price是2 Gwei ，那么整个交易的手续费 就是50 * 2 = 100 Gwei 了。</p>\n<h2 id=\"Gas-Limit\"><a href=\"#Gas-Limit\" class=\"headerlink\" title=\"Gas Limit\"></a>Gas Limit</h2><blockquote>\n<p>  Gas Limit就是一次交易中Gas的可用上限，也就是你的交易中最多会执行多少步运算。 由于交易复杂程度各有不同， 确切的Gas消耗量是在完成交易后才会知道，因此在你提交交易之前，需要为交易设定一个Gas用量的上限。</p>\n</blockquote>\n<p>如果说你提交的交易尚未完成，消耗的Gas就已经超过你设定的Gas Limit，那么这次交易就会被取消，而 已经消耗的手续费同样被扣取 —— 因为要奖励已经付出劳动的矿工。 而如果交易已经完成，消耗的Gas未达到Gas Limit， 那么只会按实际消耗的Gas 收取交易服务费。 换句话说，一个交易可能被收取的最高服务费就是Gas Limit * Gas​​ Price 了。</p>\n<hr>\n<p>最后值得一提的是Gas Price 越高，你提交的交易会越快被矿工接纳。 但通常人们都不愿多支付手续费， 那么究竟应该将Gas Price设置为多少，才可以在正常时间(eg 10 mins)内，确保交易被确认到区域链上呢？<a href=\"http://ethgasstation.info/\" target=\"_blank\" rel=\"noopener\">这个网站</a>可以帮到你。 写这篇文章时候，1 Gwei的Gas Price 就可以确保 交易在50 秒左右被接纳。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>好多朋友第一次接触以太坊的时候，都会搞不清什么是Gas，更搞不清Gas Price和Gas Limit是什么。 本文将逐一介绍并理清这三者之间的关系，相信你看完后就会理解这三个gas相关的概念了。</p>\n<h2 id=\"Gas\"><a href=\"#Gas\" class=\"headerlink\" title=\"Gas\"></a>Gas</h2><blockquote>\n<p>  Gas对应于一个交易(Transaction)中以太坊虚拟机(EVM)的实际运算步数。 越简单的交易，例如单纯的 以太币转帐交易，需要的运算步数越少， Gas亦会需要的少一点。 反之，如果要计算一些复杂运算，Gas的消耗 量就会大。 所以你提交的交易需要EVM进行的计算量越大，所需的Gas消耗量就越高了。</p>\n</blockquote>\n<h2 id=\"Gas-Price\"><a href=\"#Gas-Price\" class=\"headerlink\" title=\"Gas Price\"></a>Gas Price</h2><blockquote>\n<p>  Gas Price就是你愿意为一个单位的Gas出多少Eth，一般用Gwei作单位。 所以Gas Price 越高， 就表示交易中每运算一步，会支付更多的Eth。</p>\n</blockquote>\n<p>大家可能对Gwei 这个单位感到陌生，Gwei 其实就是10 ^ -9 Eth，也就是说1 Gwei = 0.000000001 Eth。 所以，当你设定Gas price = 20 Gwei ，就意味着你愿意为单步运算支付0.00000002 Eth。</p>\n<p>说到这里，聪明如你就会意识到以太坊的手续费计算公式很简单</p>\n<blockquote>\n<p>  交易手续费(Tx Fee) = 实际运行步数(Actual Gas Used) * 单步价格(Gas Price)</p>\n</blockquote>\n<p>例如你的交易需要以太坊执行50步完成运算，假设你设定的Gas Price是2 Gwei ，那么整个交易的手续费 就是50 * 2 = 100 Gwei 了。</p>\n<h2 id=\"Gas-Limit\"><a href=\"#Gas-Limit\" class=\"headerlink\" title=\"Gas Limit\"></a>Gas Limit</h2><blockquote>\n<p>  Gas Limit就是一次交易中Gas的可用上限，也就是你的交易中最多会执行多少步运算。 由于交易复杂程度各有不同， 确切的Gas消耗量是在完成交易后才会知道，因此在你提交交易之前，需要为交易设定一个Gas用量的上限。</p>\n</blockquote>\n<p>如果说你提交的交易尚未完成，消耗的Gas就已经超过你设定的Gas Limit，那么这次交易就会被取消，而 已经消耗的手续费同样被扣取 —— 因为要奖励已经付出劳动的矿工。 而如果交易已经完成，消耗的Gas未达到Gas Limit， 那么只会按实际消耗的Gas 收取交易服务费。 换句话说，一个交易可能被收取的最高服务费就是Gas Limit * Gas​​ Price 了。</p>\n<hr>\n<p>最后值得一提的是Gas Price 越高，你提交的交易会越快被矿工接纳。 但通常人们都不愿多支付手续费， 那么究竟应该将Gas Price设置为多少，才可以在正常时间(eg 10 mins)内，确保交易被确认到区域链上呢？<a href=\"http://ethgasstation.info/\" target=\"_blank\" rel=\"noopener\">这个网站</a>可以帮到你。 写这篇文章时候，1 Gwei的Gas Price 就可以确保 交易在50 秒左右被接纳。</p>\n"},{"title":"如何在Vue项目中使用压缩字体库","date":"2018-09-10T08:27:30.000Z","_content":"\n\n如题，在一些项目中经常会碰到在web端使用设计图上的特殊字体，目前已知的解决方案：\n1. 购买字体库服务器，对方会提供个引入脚本置于你的站点中，不过天下没有免费的午餐。\n2. 通过搜集项目需要的字型集，然后生成压缩后的字体库文件用于项目中，目前成熟的是使用字蜘提供插件可以自动生成。\n\n作为一个创业团队显然不愿意花钱付费解决了，但是字蜘的也只能针对于静态的html提取的文字，现在的前端开发环境已经不在像以前单纯操作html文件，比如：vue项目中，我们通常的代码和文字都会写在.vue中，或者js文件中。\n那么我想到是解决办法是：\n> 首先获取到.vue、.js文件中字型集，然后使用字体库工具把你需要的文字生成压缩后的字体库文件，最后在项目中引用即可。\n\n## 第一步：手写一个获取项目中字型集的node代码 getFonts.js\n```\n#源码地址：https://github.com/YuniorZen/js-tool/blob/master/getFonts.js\n\nlet fs=require('fs'),\n    files,\n    content=[];\n\nlet  walk=function(dir,exclude) {\n    let results = [];\n    let  list = fs.readdirSync(dir);\n    list.forEach(function(file) {\n        file = dir + '/' + file;\n        let stat = fs.statSync(file);\n        if(stat&& stat.isDirectory()){           \n            results = results.concat(walk(file))\n        }else{\n            if(/.(vue|html|js)$/.test(file)){ //也可以是其它文件比如json，后缀名添加上即可\n                results.push(file)\n            }    \n        } \n    });\n    return results\n};\n\n((dir)=>{\n    files=walk(dir);\n    files.forEach(file=>{\n        let text=fs.readFileSync(file);\n        text.toString().split('').forEach(letter=>{\n            if(/[a-zA-Z0-9\\u4e00-\\u9fa5]/.test(letter)&&content.indexOf(letter)==-1){\n                content.push(letter);\n            }\n        })    \n    })\n    console.log(content.join(''));\n})('./src');\n// ./src 是项目目录地址，可以是绝对地址也可以是相对的，视getFonts.js运行的目录而定\n```\n\n## 第二步：用获取的字型集生成压缩的字体库文件，这里使用[fontmin](http://ecomfe.github.io/fontmin/)的win客户端；\n![fontmin客户端](https://yuniorzen.github.io/assets/image/app.png)\n\n## 第三步：把生成的字体库文件放在用到的项目中，@font-face声明字体并使用\n```\n @font-face {\n    font-family: \"PingFangSC\";\n    src:url(\"../fonts/PingFangSC.eot\"), /* IE9 */\n        url(\"../fonts/PingFangSC.woff\") format(\"woff\"), /* chrome、firefox */\n        url(\"../fonts/PingFangSC.ttf\") format(\"truetype\"), /* chrome、firefox、opera、Safari, Android, iOS 4.2+ */  \n        url(\"../fonts/PingFangSC.svg#PingFangSC\") format(\"svg\"); /* iOS 4.1- */\n    font-style: normal;\n    font-weight: normal;\n  }\n\n```\n\n***\n\n最后这个方案仅适用于项目中文字较固定，不会经常变更的，不然每次变更新增字体都要手动跑一边，类似社交、论坛这种UGC项目就不要这样折腾了，还是老老实实的购买字体服务器吧！\n\n","source":"_posts/如何在Vue项目中使用压缩字体库.md","raw":"---\ntitle: 如何在Vue项目中使用压缩字体库\ndate: 2018-09-10 16:27:30\ncategories: 前端技术\ntags:\n    - Vue\n    - WebFont\n    - 字体库\n---\n\n\n如题，在一些项目中经常会碰到在web端使用设计图上的特殊字体，目前已知的解决方案：\n1. 购买字体库服务器，对方会提供个引入脚本置于你的站点中，不过天下没有免费的午餐。\n2. 通过搜集项目需要的字型集，然后生成压缩后的字体库文件用于项目中，目前成熟的是使用字蜘提供插件可以自动生成。\n\n作为一个创业团队显然不愿意花钱付费解决了，但是字蜘的也只能针对于静态的html提取的文字，现在的前端开发环境已经不在像以前单纯操作html文件，比如：vue项目中，我们通常的代码和文字都会写在.vue中，或者js文件中。\n那么我想到是解决办法是：\n> 首先获取到.vue、.js文件中字型集，然后使用字体库工具把你需要的文字生成压缩后的字体库文件，最后在项目中引用即可。\n\n## 第一步：手写一个获取项目中字型集的node代码 getFonts.js\n```\n#源码地址：https://github.com/YuniorZen/js-tool/blob/master/getFonts.js\n\nlet fs=require('fs'),\n    files,\n    content=[];\n\nlet  walk=function(dir,exclude) {\n    let results = [];\n    let  list = fs.readdirSync(dir);\n    list.forEach(function(file) {\n        file = dir + '/' + file;\n        let stat = fs.statSync(file);\n        if(stat&& stat.isDirectory()){           \n            results = results.concat(walk(file))\n        }else{\n            if(/.(vue|html|js)$/.test(file)){ //也可以是其它文件比如json，后缀名添加上即可\n                results.push(file)\n            }    \n        } \n    });\n    return results\n};\n\n((dir)=>{\n    files=walk(dir);\n    files.forEach(file=>{\n        let text=fs.readFileSync(file);\n        text.toString().split('').forEach(letter=>{\n            if(/[a-zA-Z0-9\\u4e00-\\u9fa5]/.test(letter)&&content.indexOf(letter)==-1){\n                content.push(letter);\n            }\n        })    \n    })\n    console.log(content.join(''));\n})('./src');\n// ./src 是项目目录地址，可以是绝对地址也可以是相对的，视getFonts.js运行的目录而定\n```\n\n## 第二步：用获取的字型集生成压缩的字体库文件，这里使用[fontmin](http://ecomfe.github.io/fontmin/)的win客户端；\n![fontmin客户端](https://yuniorzen.github.io/assets/image/app.png)\n\n## 第三步：把生成的字体库文件放在用到的项目中，@font-face声明字体并使用\n```\n @font-face {\n    font-family: \"PingFangSC\";\n    src:url(\"../fonts/PingFangSC.eot\"), /* IE9 */\n        url(\"../fonts/PingFangSC.woff\") format(\"woff\"), /* chrome、firefox */\n        url(\"../fonts/PingFangSC.ttf\") format(\"truetype\"), /* chrome、firefox、opera、Safari, Android, iOS 4.2+ */  \n        url(\"../fonts/PingFangSC.svg#PingFangSC\") format(\"svg\"); /* iOS 4.1- */\n    font-style: normal;\n    font-weight: normal;\n  }\n\n```\n\n***\n\n最后这个方案仅适用于项目中文字较固定，不会经常变更的，不然每次变更新增字体都要手动跑一边，类似社交、论坛这种UGC项目就不要这样折腾了，还是老老实实的购买字体服务器吧！\n\n","slug":"如何在Vue项目中使用压缩字体库","published":1,"updated":"2019-11-30T14:46:41.402Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3n56j5000017z7xh95vhsnn","content":"<p>如题，在一些项目中经常会碰到在web端使用设计图上的特殊字体，目前已知的解决方案：</p>\n<ol>\n<li>购买字体库服务器，对方会提供个引入脚本置于你的站点中，不过天下没有免费的午餐。</li>\n<li>通过搜集项目需要的字型集，然后生成压缩后的字体库文件用于项目中，目前成熟的是使用字蜘提供插件可以自动生成。</li>\n</ol>\n<p>作为一个创业团队显然不愿意花钱付费解决了，但是字蜘的也只能针对于静态的html提取的文字，现在的前端开发环境已经不在像以前单纯操作html文件，比如：vue项目中，我们通常的代码和文字都会写在.vue中，或者js文件中。<br>那么我想到是解决办法是：</p>\n<blockquote>\n<p>首先获取到.vue、.js文件中字型集，然后使用字体库工具把你需要的文字生成压缩后的字体库文件，最后在项目中引用即可。</p>\n</blockquote>\n<h2 id=\"第一步：手写一个获取项目中字型集的node代码-getFonts-js\"><a href=\"#第一步：手写一个获取项目中字型集的node代码-getFonts-js\" class=\"headerlink\" title=\"第一步：手写一个获取项目中字型集的node代码 getFonts.js\"></a>第一步：手写一个获取项目中字型集的node代码 getFonts.js</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#源码地址：https://github.com/YuniorZen/js-tool/blob/master/getFonts.js</span><br><span class=\"line\"></span><br><span class=\"line\">let fs=require(&apos;fs&apos;),</span><br><span class=\"line\">    files,</span><br><span class=\"line\">    content=[];</span><br><span class=\"line\"></span><br><span class=\"line\">let  walk=function(dir,exclude) &#123;</span><br><span class=\"line\">    let results = [];</span><br><span class=\"line\">    let  list = fs.readdirSync(dir);</span><br><span class=\"line\">    list.forEach(function(file) &#123;</span><br><span class=\"line\">        file = dir + &apos;/&apos; + file;</span><br><span class=\"line\">        let stat = fs.statSync(file);</span><br><span class=\"line\">        if(stat&amp;&amp; stat.isDirectory())&#123;           </span><br><span class=\"line\">            results = results.concat(walk(file))</span><br><span class=\"line\">        &#125;else&#123;</span><br><span class=\"line\">            if(/.(vue|html|js)$/.test(file))&#123; //也可以是其它文件比如json，后缀名添加上即可</span><br><span class=\"line\">                results.push(file)</span><br><span class=\"line\">            &#125;    </span><br><span class=\"line\">        &#125; </span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    return results</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">((dir)=&gt;&#123;</span><br><span class=\"line\">    files=walk(dir);</span><br><span class=\"line\">    files.forEach(file=&gt;&#123;</span><br><span class=\"line\">        let text=fs.readFileSync(file);</span><br><span class=\"line\">        text.toString().split(&apos;&apos;).forEach(letter=&gt;&#123;</span><br><span class=\"line\">            if(/[a-zA-Z0-9\\u4e00-\\u9fa5]/.test(letter)&amp;&amp;content.indexOf(letter)==-1)&#123;</span><br><span class=\"line\">                content.push(letter);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)    </span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    console.log(content.join(&apos;&apos;));</span><br><span class=\"line\">&#125;)(&apos;./src&apos;);</span><br><span class=\"line\">// ./src 是项目目录地址，可以是绝对地址也可以是相对的，视getFonts.js运行的目录而定</span><br></pre></td></tr></table></figure>\n<h2 id=\"第二步：用获取的字型集生成压缩的字体库文件，这里使用fontmin的win客户端；\"><a href=\"#第二步：用获取的字型集生成压缩的字体库文件，这里使用fontmin的win客户端；\" class=\"headerlink\" title=\"第二步：用获取的字型集生成压缩的字体库文件，这里使用fontmin的win客户端；\"></a>第二步：用获取的字型集生成压缩的字体库文件，这里使用<a href=\"http://ecomfe.github.io/fontmin/\" target=\"_blank\" rel=\"noopener\">fontmin</a>的win客户端；</h2><p><img src=\"https://yuniorzen.github.io/assets/image/app.png\" alt=\"fontmin客户端\"></p>\n<h2 id=\"第三步：把生成的字体库文件放在用到的项目中，-font-face声明字体并使用\"><a href=\"#第三步：把生成的字体库文件放在用到的项目中，-font-face声明字体并使用\" class=\"headerlink\" title=\"第三步：把生成的字体库文件放在用到的项目中，@font-face声明字体并使用\"></a>第三步：把生成的字体库文件放在用到的项目中，@font-face声明字体并使用</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@font-face &#123;</span><br><span class=\"line\">   font-family: &quot;PingFangSC&quot;;</span><br><span class=\"line\">   src:url(&quot;../fonts/PingFangSC.eot&quot;), /* IE9 */</span><br><span class=\"line\">       url(&quot;../fonts/PingFangSC.woff&quot;) format(&quot;woff&quot;), /* chrome、firefox */</span><br><span class=\"line\">       url(&quot;../fonts/PingFangSC.ttf&quot;) format(&quot;truetype&quot;), /* chrome、firefox、opera、Safari, Android, iOS 4.2+ */  </span><br><span class=\"line\">       url(&quot;../fonts/PingFangSC.svg#PingFangSC&quot;) format(&quot;svg&quot;); /* iOS 4.1- */</span><br><span class=\"line\">   font-style: normal;</span><br><span class=\"line\">   font-weight: normal;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n<hr>\n<p>最后这个方案仅适用于项目中文字较固定，不会经常变更的，不然每次变更新增字体都要手动跑一边，类似社交、论坛这种UGC项目就不要这样折腾了，还是老老实实的购买字体服务器吧！</p>\n","site":{"data":{}},"excerpt":"","more":"<p>如题，在一些项目中经常会碰到在web端使用设计图上的特殊字体，目前已知的解决方案：</p>\n<ol>\n<li>购买字体库服务器，对方会提供个引入脚本置于你的站点中，不过天下没有免费的午餐。</li>\n<li>通过搜集项目需要的字型集，然后生成压缩后的字体库文件用于项目中，目前成熟的是使用字蜘提供插件可以自动生成。</li>\n</ol>\n<p>作为一个创业团队显然不愿意花钱付费解决了，但是字蜘的也只能针对于静态的html提取的文字，现在的前端开发环境已经不在像以前单纯操作html文件，比如：vue项目中，我们通常的代码和文字都会写在.vue中，或者js文件中。<br>那么我想到是解决办法是：</p>\n<blockquote>\n<p>首先获取到.vue、.js文件中字型集，然后使用字体库工具把你需要的文字生成压缩后的字体库文件，最后在项目中引用即可。</p>\n</blockquote>\n<h2 id=\"第一步：手写一个获取项目中字型集的node代码-getFonts-js\"><a href=\"#第一步：手写一个获取项目中字型集的node代码-getFonts-js\" class=\"headerlink\" title=\"第一步：手写一个获取项目中字型集的node代码 getFonts.js\"></a>第一步：手写一个获取项目中字型集的node代码 getFonts.js</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#源码地址：https://github.com/YuniorZen/js-tool/blob/master/getFonts.js</span><br><span class=\"line\"></span><br><span class=\"line\">let fs=require(&apos;fs&apos;),</span><br><span class=\"line\">    files,</span><br><span class=\"line\">    content=[];</span><br><span class=\"line\"></span><br><span class=\"line\">let  walk=function(dir,exclude) &#123;</span><br><span class=\"line\">    let results = [];</span><br><span class=\"line\">    let  list = fs.readdirSync(dir);</span><br><span class=\"line\">    list.forEach(function(file) &#123;</span><br><span class=\"line\">        file = dir + &apos;/&apos; + file;</span><br><span class=\"line\">        let stat = fs.statSync(file);</span><br><span class=\"line\">        if(stat&amp;&amp; stat.isDirectory())&#123;           </span><br><span class=\"line\">            results = results.concat(walk(file))</span><br><span class=\"line\">        &#125;else&#123;</span><br><span class=\"line\">            if(/.(vue|html|js)$/.test(file))&#123; //也可以是其它文件比如json，后缀名添加上即可</span><br><span class=\"line\">                results.push(file)</span><br><span class=\"line\">            &#125;    </span><br><span class=\"line\">        &#125; </span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    return results</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">((dir)=&gt;&#123;</span><br><span class=\"line\">    files=walk(dir);</span><br><span class=\"line\">    files.forEach(file=&gt;&#123;</span><br><span class=\"line\">        let text=fs.readFileSync(file);</span><br><span class=\"line\">        text.toString().split(&apos;&apos;).forEach(letter=&gt;&#123;</span><br><span class=\"line\">            if(/[a-zA-Z0-9\\u4e00-\\u9fa5]/.test(letter)&amp;&amp;content.indexOf(letter)==-1)&#123;</span><br><span class=\"line\">                content.push(letter);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)    </span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    console.log(content.join(&apos;&apos;));</span><br><span class=\"line\">&#125;)(&apos;./src&apos;);</span><br><span class=\"line\">// ./src 是项目目录地址，可以是绝对地址也可以是相对的，视getFonts.js运行的目录而定</span><br></pre></td></tr></table></figure>\n<h2 id=\"第二步：用获取的字型集生成压缩的字体库文件，这里使用fontmin的win客户端；\"><a href=\"#第二步：用获取的字型集生成压缩的字体库文件，这里使用fontmin的win客户端；\" class=\"headerlink\" title=\"第二步：用获取的字型集生成压缩的字体库文件，这里使用fontmin的win客户端；\"></a>第二步：用获取的字型集生成压缩的字体库文件，这里使用<a href=\"http://ecomfe.github.io/fontmin/\" target=\"_blank\" rel=\"noopener\">fontmin</a>的win客户端；</h2><p><img src=\"https://yuniorzen.github.io/assets/image/app.png\" alt=\"fontmin客户端\"></p>\n<h2 id=\"第三步：把生成的字体库文件放在用到的项目中，-font-face声明字体并使用\"><a href=\"#第三步：把生成的字体库文件放在用到的项目中，-font-face声明字体并使用\" class=\"headerlink\" title=\"第三步：把生成的字体库文件放在用到的项目中，@font-face声明字体并使用\"></a>第三步：把生成的字体库文件放在用到的项目中，@font-face声明字体并使用</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@font-face &#123;</span><br><span class=\"line\">   font-family: &quot;PingFangSC&quot;;</span><br><span class=\"line\">   src:url(&quot;../fonts/PingFangSC.eot&quot;), /* IE9 */</span><br><span class=\"line\">       url(&quot;../fonts/PingFangSC.woff&quot;) format(&quot;woff&quot;), /* chrome、firefox */</span><br><span class=\"line\">       url(&quot;../fonts/PingFangSC.ttf&quot;) format(&quot;truetype&quot;), /* chrome、firefox、opera、Safari, Android, iOS 4.2+ */  </span><br><span class=\"line\">       url(&quot;../fonts/PingFangSC.svg#PingFangSC&quot;) format(&quot;svg&quot;); /* iOS 4.1- */</span><br><span class=\"line\">   font-style: normal;</span><br><span class=\"line\">   font-weight: normal;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n<hr>\n<p>最后这个方案仅适用于项目中文字较固定，不会经常变更的，不然每次变更新增字体都要手动跑一边，类似社交、论坛这种UGC项目就不要这样折腾了，还是老老实实的购买字体服务器吧！</p>\n"},{"title":"巧用伪元素(:after/before)放大手机端点击焦点","date":"2019-11-27T11:06:23.000Z","_content":"\n\n## 问题场景\n我们在使用手机的过程中，是不是遇到过一些特别让你累的交互，就如手机端的按钮或图标老是点击不到，要多点击几次才能命中！\n\n\n## 如何解决\n手机的屏幕普遍比较小且分辨率高，这就导致设计的时候不能过大且要保持美观，严格按钮设计图尺寸开发后在手机端是会存在这样的问题。\n那么怎么解决呢？不按照设计图切图?增加内边距撑大容器？这些方案都有或多或少不合理的地方，我有妙计可骚一把！\n\n\n## 解决方案:after/before\n> 通过设置点击元素的:after或:before伪元素大小来放大点击元素的点击区域\n\n示例代码如下：\n```\n/* 放大点击区域功能类 */\n.nice-focus{\n\tposition:relative;\n}\n.nice-focus::after{\n\tcontent:'';\t\n\tposition:absolute;\n\twidth:80px;\n\theight:80px;\n\ttop:50%;\n\tleft:50%;\n\tmargin-top:-40px;\n\tmargin-left:-40px;\n}\n\n/*返回按钮*/\n.back{\n\twidth:12px;\n\theigh:24px;\n\tbackground-image: url(/static/img/icon-back.png);\n\tbackground-size: 100% auto;\n}\n```\n\n```\n<!-- 页面使用 -->\n<div class=\"back nice-focus\">返回</div>\n```\n\n\n## 总结\n很多看似不能解决问题，换个角度就可以轻松解决！此方法也同样适用于小程序开发。","source":"_posts/巧用伪元素放大手机端点击焦点.md","raw":"---\ntitle: 巧用伪元素(:after/before)放大手机端点击焦点\ndate: 2019-11-27 19:06:23\ncategories: 前端技术\ntags:\n\t- 伪元素\n\t- 手机端点击区域过小\n\t- 放大点击区域\n---\n\n\n## 问题场景\n我们在使用手机的过程中，是不是遇到过一些特别让你累的交互，就如手机端的按钮或图标老是点击不到，要多点击几次才能命中！\n\n\n## 如何解决\n手机的屏幕普遍比较小且分辨率高，这就导致设计的时候不能过大且要保持美观，严格按钮设计图尺寸开发后在手机端是会存在这样的问题。\n那么怎么解决呢？不按照设计图切图?增加内边距撑大容器？这些方案都有或多或少不合理的地方，我有妙计可骚一把！\n\n\n## 解决方案:after/before\n> 通过设置点击元素的:after或:before伪元素大小来放大点击元素的点击区域\n\n示例代码如下：\n```\n/* 放大点击区域功能类 */\n.nice-focus{\n\tposition:relative;\n}\n.nice-focus::after{\n\tcontent:'';\t\n\tposition:absolute;\n\twidth:80px;\n\theight:80px;\n\ttop:50%;\n\tleft:50%;\n\tmargin-top:-40px;\n\tmargin-left:-40px;\n}\n\n/*返回按钮*/\n.back{\n\twidth:12px;\n\theigh:24px;\n\tbackground-image: url(/static/img/icon-back.png);\n\tbackground-size: 100% auto;\n}\n```\n\n```\n<!-- 页面使用 -->\n<div class=\"back nice-focus\">返回</div>\n```\n\n\n## 总结\n很多看似不能解决问题，换个角度就可以轻松解决！此方法也同样适用于小程序开发。","slug":"巧用伪元素放大手机端点击焦点","published":1,"updated":"2019-11-30T14:46:41.403Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3n56j5400047z7x83itwrn4","content":"<h2 id=\"问题场景\"><a href=\"#问题场景\" class=\"headerlink\" title=\"问题场景\"></a>问题场景</h2><p>我们在使用手机的过程中，是不是遇到过一些特别让你累的交互，就如手机端的按钮或图标老是点击不到，要多点击几次才能命中！</p>\n<h2 id=\"如何解决\"><a href=\"#如何解决\" class=\"headerlink\" title=\"如何解决\"></a>如何解决</h2><p>手机的屏幕普遍比较小且分辨率高，这就导致设计的时候不能过大且要保持美观，严格按钮设计图尺寸开发后在手机端是会存在这样的问题。<br>那么怎么解决呢？不按照设计图切图?增加内边距撑大容器？这些方案都有或多或少不合理的地方，我有妙计可骚一把！</p>\n<h2 id=\"解决方案-after-before\"><a href=\"#解决方案-after-before\" class=\"headerlink\" title=\"解决方案:after/before\"></a>解决方案:after/before</h2><blockquote>\n<p>通过设置点击元素的:after或:before伪元素大小来放大点击元素的点击区域</p>\n</blockquote>\n<p>示例代码如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/* 放大点击区域功能类 */</span><br><span class=\"line\">.nice-focus&#123;</span><br><span class=\"line\">\tposition:relative;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.nice-focus::after&#123;</span><br><span class=\"line\">\tcontent:&apos;&apos;;\t</span><br><span class=\"line\">\tposition:absolute;</span><br><span class=\"line\">\twidth:80px;</span><br><span class=\"line\">\theight:80px;</span><br><span class=\"line\">\ttop:50%;</span><br><span class=\"line\">\tleft:50%;</span><br><span class=\"line\">\tmargin-top:-40px;</span><br><span class=\"line\">\tmargin-left:-40px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/*返回按钮*/</span><br><span class=\"line\">.back&#123;</span><br><span class=\"line\">\twidth:12px;</span><br><span class=\"line\">\theigh:24px;</span><br><span class=\"line\">\tbackground-image: url(/static/img/icon-back.png);</span><br><span class=\"line\">\tbackground-size: 100% auto;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 页面使用 --&gt;</span><br><span class=\"line\">&lt;div class=&quot;back nice-focus&quot;&gt;返回&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>很多看似不能解决问题，换个角度就可以轻松解决！此方法也同样适用于小程序开发。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"问题场景\"><a href=\"#问题场景\" class=\"headerlink\" title=\"问题场景\"></a>问题场景</h2><p>我们在使用手机的过程中，是不是遇到过一些特别让你累的交互，就如手机端的按钮或图标老是点击不到，要多点击几次才能命中！</p>\n<h2 id=\"如何解决\"><a href=\"#如何解决\" class=\"headerlink\" title=\"如何解决\"></a>如何解决</h2><p>手机的屏幕普遍比较小且分辨率高，这就导致设计的时候不能过大且要保持美观，严格按钮设计图尺寸开发后在手机端是会存在这样的问题。<br>那么怎么解决呢？不按照设计图切图?增加内边距撑大容器？这些方案都有或多或少不合理的地方，我有妙计可骚一把！</p>\n<h2 id=\"解决方案-after-before\"><a href=\"#解决方案-after-before\" class=\"headerlink\" title=\"解决方案:after/before\"></a>解决方案:after/before</h2><blockquote>\n<p>通过设置点击元素的:after或:before伪元素大小来放大点击元素的点击区域</p>\n</blockquote>\n<p>示例代码如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/* 放大点击区域功能类 */</span><br><span class=\"line\">.nice-focus&#123;</span><br><span class=\"line\">\tposition:relative;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.nice-focus::after&#123;</span><br><span class=\"line\">\tcontent:&apos;&apos;;\t</span><br><span class=\"line\">\tposition:absolute;</span><br><span class=\"line\">\twidth:80px;</span><br><span class=\"line\">\theight:80px;</span><br><span class=\"line\">\ttop:50%;</span><br><span class=\"line\">\tleft:50%;</span><br><span class=\"line\">\tmargin-top:-40px;</span><br><span class=\"line\">\tmargin-left:-40px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/*返回按钮*/</span><br><span class=\"line\">.back&#123;</span><br><span class=\"line\">\twidth:12px;</span><br><span class=\"line\">\theigh:24px;</span><br><span class=\"line\">\tbackground-image: url(/static/img/icon-back.png);</span><br><span class=\"line\">\tbackground-size: 100% auto;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 页面使用 --&gt;</span><br><span class=\"line\">&lt;div class=&quot;back nice-focus&quot;&gt;返回&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>很多看似不能解决问题，换个角度就可以轻松解决！此方法也同样适用于小程序开发。</p>\n"},{"title":"小程序取消下拉橡皮筋回弹效果解决方案及坑总结（持续更新）","date":"2019-09-22T12:27:30.000Z","_content":"\n\n\n提到ios系统的橡皮筋效果，作为开发者是又爱又恨，有想要这个效果又有不想要的，无奈的是却没有一个简单的开关来设置这个效果是否开启。\n最近在开发小程序时也遇到有关于ios橡皮筋回弹的问题，这里分两部分（***取消橡皮筋回弹效果和因为这个效果遇到的坑***）和大家分享一下。\n\n## 取消IOS橡皮筋回弹效果的解决方案\n\n> **1) 页面无滚动区域时，可通过页面json配置文件设置disableScroll:true禁止整个页面滚动，从而取消橡皮筋效果。**\n```\n{\n  \"disableScroll\":true\n}\n```\n测试代码：https://github.com/YuniorZen/minicode-debug/tree/master/minicode01/pages/demo1\n\n\n> **2) 页面有滚动区域，滚动区域通过view模拟实现，然后在页面json配置文件设置disableScroll:true禁止整个页面滚动，从而取消橡皮筋效果。**\n```\njson文件配置\n{\n  \"disableScroll\":true\n}\n\nview元素模拟实现滚动样式\n{\n  height: calc(100vh - 120rpx); //高度必须是固定的值\n  overflow-y: auto;\n}\n```\n不足之处在于view元素模拟的滚动区域滚动时不够连贯，没有scroll-view那种原生丝滑般的感觉。\n测试代码：https://github.com/YuniorZen/minicode-debug/tree/master/minicode01/pages/demo2\n\n\n> **3) 页面有滚动区域，滚动区域使用scroll-view,这时通过disableScroll则无法实现，尝试设置一下scroll-view的scroll-y=\"{{false}}\"，上拉或下拉时居然不再触发橡皮筋的回弹啦，当然滚动区域也不能滚动。**\n小脑袋动一动，解决方法有啦！\n***通过设置一个变量scrollY动态控制滚动区域的滚动从而阻止回弹。***\n***监听bindscrolltoupper\\bindscrolltolower当scroll-view区域滚动到顶部或底部时候设置scrollY:false来关闭页面滚动，从而阻止回弹。***\n***监听bindtouchstart\\bindtouchmove 当用户反方向滑动的时候设置scrollY:true，再次开启页面滚动。***\n```\nwxml滚动区域属性和事件处理，具体实现请点击测试代码链接\n<scroll-view scroll-y=\"{{scrollY}}\" class=\"list\" upper-threshold=\"5\" lower-threshold=\"5\"\nbindscrolltoupper=\"bindscrolltoupper\" \nbindscrolltolower=\"bindscrolltolower\" \nbindtouchstart=\"touchstart\"\nbindtouchmove=\"touchmove\">\n<view class=\"list-item\" wx:for=\"{{list}}\" wx:key=\"{{index}}\">{{item}}</view>\n</scroll-view>  \n```\n相对view模拟实现滚动区域，scroll-view滚动更丝滑，不过每次滚动到底部或顶部的时候，再反向滑动时由于再次开启scroll-view滚动会有操作卡顿的感觉，暂时没想到好的解决方法，有解决的大佬希望提供一下想法，一起学习下。\n测试代码：https://github.com/YuniorZen/minicode-debug/tree/master/minicode01/pages/demo3\n\n\n\n\n## IOS橡皮筋效果遇到的坑\n> **1) 操作左滑删除组件时上下移动，会触发橡皮筋效果导致页面抖动的问题**\n这个坑的严重程度看设计师的意愿了，反正我们团队目前是需要解决的，方案类似取消橡皮筋解决方案的第三种\n***在左滑的时候关闭scroll-view的滚动，取消时再次开启滚动***\n\n\n> **2) 如果页面顶部有置顶的横向滚动区域scroll-view，当页面滚动到底部时继续上拉会导致置顶头部消失，松开回弹后头部又会出现。**\n坑是社区里的朋友提出来的，我借了个iphone x 一预览，我嚓，还是真是个奇坑！\n微信官方回复已复现正在解决中... 不想继续等下去的，暂时解决方法是\n***监听页面的滚动区域，当滚动到底部时设置顶部横向滚动scroll-view的scroll-x=false来解决。***\n\n\n## 写在最后\n以上便是我在小程序开发中有关于ios橡皮筋回弹效果的分享，示例代码已上传github,可自行下载体验。\n>https://github.com/YuniorZen/minicode-debug/tree/master/minicode01\n\n目前微信官方虽说已经着手解决(已两年)此类bug，但哪吒说 我命由我不由天，所以还是我们开发者多分享些解决方案自救来的快。\n分享方案如有问题还望不吝指出，没有涉及到的坑也欢迎评论提出，一起学习和解决，后续也会基于此篇不断更新总结。","source":"_posts/小程序取消橡皮筋回弹效果解决方案及坑总结.md","raw":"---\ntitle: 小程序取消下拉橡皮筋回弹效果解决方案及坑总结（持续更新）\ndate: 2019-09-22 20:27:30\ncategories: 前端技术\ntags:\n    - 小程序\n    - 消去IOS橡皮筋\n    - 小程序中IOS橡皮筋效果的坑\n---\n\n\n\n提到ios系统的橡皮筋效果，作为开发者是又爱又恨，有想要这个效果又有不想要的，无奈的是却没有一个简单的开关来设置这个效果是否开启。\n最近在开发小程序时也遇到有关于ios橡皮筋回弹的问题，这里分两部分（***取消橡皮筋回弹效果和因为这个效果遇到的坑***）和大家分享一下。\n\n## 取消IOS橡皮筋回弹效果的解决方案\n\n> **1) 页面无滚动区域时，可通过页面json配置文件设置disableScroll:true禁止整个页面滚动，从而取消橡皮筋效果。**\n```\n{\n  \"disableScroll\":true\n}\n```\n测试代码：https://github.com/YuniorZen/minicode-debug/tree/master/minicode01/pages/demo1\n\n\n> **2) 页面有滚动区域，滚动区域通过view模拟实现，然后在页面json配置文件设置disableScroll:true禁止整个页面滚动，从而取消橡皮筋效果。**\n```\njson文件配置\n{\n  \"disableScroll\":true\n}\n\nview元素模拟实现滚动样式\n{\n  height: calc(100vh - 120rpx); //高度必须是固定的值\n  overflow-y: auto;\n}\n```\n不足之处在于view元素模拟的滚动区域滚动时不够连贯，没有scroll-view那种原生丝滑般的感觉。\n测试代码：https://github.com/YuniorZen/minicode-debug/tree/master/minicode01/pages/demo2\n\n\n> **3) 页面有滚动区域，滚动区域使用scroll-view,这时通过disableScroll则无法实现，尝试设置一下scroll-view的scroll-y=\"{{false}}\"，上拉或下拉时居然不再触发橡皮筋的回弹啦，当然滚动区域也不能滚动。**\n小脑袋动一动，解决方法有啦！\n***通过设置一个变量scrollY动态控制滚动区域的滚动从而阻止回弹。***\n***监听bindscrolltoupper\\bindscrolltolower当scroll-view区域滚动到顶部或底部时候设置scrollY:false来关闭页面滚动，从而阻止回弹。***\n***监听bindtouchstart\\bindtouchmove 当用户反方向滑动的时候设置scrollY:true，再次开启页面滚动。***\n```\nwxml滚动区域属性和事件处理，具体实现请点击测试代码链接\n<scroll-view scroll-y=\"{{scrollY}}\" class=\"list\" upper-threshold=\"5\" lower-threshold=\"5\"\nbindscrolltoupper=\"bindscrolltoupper\" \nbindscrolltolower=\"bindscrolltolower\" \nbindtouchstart=\"touchstart\"\nbindtouchmove=\"touchmove\">\n<view class=\"list-item\" wx:for=\"{{list}}\" wx:key=\"{{index}}\">{{item}}</view>\n</scroll-view>  \n```\n相对view模拟实现滚动区域，scroll-view滚动更丝滑，不过每次滚动到底部或顶部的时候，再反向滑动时由于再次开启scroll-view滚动会有操作卡顿的感觉，暂时没想到好的解决方法，有解决的大佬希望提供一下想法，一起学习下。\n测试代码：https://github.com/YuniorZen/minicode-debug/tree/master/minicode01/pages/demo3\n\n\n\n\n## IOS橡皮筋效果遇到的坑\n> **1) 操作左滑删除组件时上下移动，会触发橡皮筋效果导致页面抖动的问题**\n这个坑的严重程度看设计师的意愿了，反正我们团队目前是需要解决的，方案类似取消橡皮筋解决方案的第三种\n***在左滑的时候关闭scroll-view的滚动，取消时再次开启滚动***\n\n\n> **2) 如果页面顶部有置顶的横向滚动区域scroll-view，当页面滚动到底部时继续上拉会导致置顶头部消失，松开回弹后头部又会出现。**\n坑是社区里的朋友提出来的，我借了个iphone x 一预览，我嚓，还是真是个奇坑！\n微信官方回复已复现正在解决中... 不想继续等下去的，暂时解决方法是\n***监听页面的滚动区域，当滚动到底部时设置顶部横向滚动scroll-view的scroll-x=false来解决。***\n\n\n## 写在最后\n以上便是我在小程序开发中有关于ios橡皮筋回弹效果的分享，示例代码已上传github,可自行下载体验。\n>https://github.com/YuniorZen/minicode-debug/tree/master/minicode01\n\n目前微信官方虽说已经着手解决(已两年)此类bug，但哪吒说 我命由我不由天，所以还是我们开发者多分享些解决方案自救来的快。\n分享方案如有问题还望不吝指出，没有涉及到的坑也欢迎评论提出，一起学习和解决，后续也会基于此篇不断更新总结。","slug":"小程序取消橡皮筋回弹效果解决方案及坑总结","published":1,"updated":"2019-11-30T14:46:41.402Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3n56j5500057z7xt9xs48xt","content":"<p>提到ios系统的橡皮筋效果，作为开发者是又爱又恨，有想要这个效果又有不想要的，无奈的是却没有一个简单的开关来设置这个效果是否开启。<br>最近在开发小程序时也遇到有关于ios橡皮筋回弹的问题，这里分两部分（<strong><em>取消橡皮筋回弹效果和因为这个效果遇到的坑</em></strong>）和大家分享一下。</p>\n<h2 id=\"取消IOS橡皮筋回弹效果的解决方案\"><a href=\"#取消IOS橡皮筋回弹效果的解决方案\" class=\"headerlink\" title=\"取消IOS橡皮筋回弹效果的解决方案\"></a>取消IOS橡皮筋回弹效果的解决方案</h2><blockquote>\n<p><strong>1) 页面无滚动区域时，可通过页面json配置文件设置disableScroll:true禁止整个页面滚动，从而取消橡皮筋效果。</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;disableScroll&quot;:true</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p>测试代码：<a href=\"https://github.com/YuniorZen/minicode-debug/tree/master/minicode01/pages/demo1\" target=\"_blank\" rel=\"noopener\">https://github.com/YuniorZen/minicode-debug/tree/master/minicode01/pages/demo1</a></p>\n<blockquote>\n<p><strong>2) 页面有滚动区域，滚动区域通过view模拟实现，然后在页面json配置文件设置disableScroll:true禁止整个页面滚动，从而取消橡皮筋效果。</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">json文件配置</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;disableScroll&quot;:true</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">view元素模拟实现滚动样式</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  height: calc(100vh - 120rpx); //高度必须是固定的值</span><br><span class=\"line\">  overflow-y: auto;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p>不足之处在于view元素模拟的滚动区域滚动时不够连贯，没有scroll-view那种原生丝滑般的感觉。<br>测试代码：<a href=\"https://github.com/YuniorZen/minicode-debug/tree/master/minicode01/pages/demo2\" target=\"_blank\" rel=\"noopener\">https://github.com/YuniorZen/minicode-debug/tree/master/minicode01/pages/demo2</a></p>\n<blockquote>\n<p><strong>3) 页面有滚动区域，滚动区域使用scroll-view,这时通过disableScroll则无法实现，尝试设置一下scroll-view的scroll-y=”false“，上拉或下拉时居然不再触发橡皮筋的回弹啦，当然滚动区域也不能滚动。</strong><br>小脑袋动一动，解决方法有啦！<br><strong><em>通过设置一个变量scrollY动态控制滚动区域的滚动从而阻止回弹。</em></strong><br><strong><em>监听bindscrolltoupper\\bindscrolltolower当scroll-view区域滚动到顶部或底部时候设置scrollY:false来关闭页面滚动，从而阻止回弹。</em></strong><br><strong><em>监听bindtouchstart\\bindtouchmove 当用户反方向滑动的时候设置scrollY:true，再次开启页面滚动。</em></strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wxml滚动区域属性和事件处理，具体实现请点击测试代码链接</span><br><span class=\"line\">&lt;scroll-view scroll-y=&quot;&#123;&#123;scrollY&#125;&#125;&quot; class=&quot;list&quot; upper-threshold=&quot;5&quot; lower-threshold=&quot;5&quot;</span><br><span class=\"line\">bindscrolltoupper=&quot;bindscrolltoupper&quot; </span><br><span class=\"line\">bindscrolltolower=&quot;bindscrolltolower&quot; </span><br><span class=\"line\">bindtouchstart=&quot;touchstart&quot;</span><br><span class=\"line\">bindtouchmove=&quot;touchmove&quot;&gt;</span><br><span class=\"line\">&lt;view class=&quot;list-item&quot; wx:for=&quot;&#123;&#123;list&#125;&#125;&quot; wx:key=&quot;&#123;&#123;index&#125;&#125;&quot;&gt;&#123;&#123;item&#125;&#125;&lt;/view&gt;</span><br><span class=\"line\">&lt;/scroll-view&gt;</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p>相对view模拟实现滚动区域，scroll-view滚动更丝滑，不过每次滚动到底部或顶部的时候，再反向滑动时由于再次开启scroll-view滚动会有操作卡顿的感觉，暂时没想到好的解决方法，有解决的大佬希望提供一下想法，一起学习下。<br>测试代码：<a href=\"https://github.com/YuniorZen/minicode-debug/tree/master/minicode01/pages/demo3\" target=\"_blank\" rel=\"noopener\">https://github.com/YuniorZen/minicode-debug/tree/master/minicode01/pages/demo3</a></p>\n<h2 id=\"IOS橡皮筋效果遇到的坑\"><a href=\"#IOS橡皮筋效果遇到的坑\" class=\"headerlink\" title=\"IOS橡皮筋效果遇到的坑\"></a>IOS橡皮筋效果遇到的坑</h2><blockquote>\n<p><strong>1) 操作左滑删除组件时上下移动，会触发橡皮筋效果导致页面抖动的问题</strong><br>这个坑的严重程度看设计师的意愿了，反正我们团队目前是需要解决的，方案类似取消橡皮筋解决方案的第三种<br><strong><em>在左滑的时候关闭scroll-view的滚动，取消时再次开启滚动</em></strong></p>\n</blockquote>\n<blockquote>\n<p><strong>2) 如果页面顶部有置顶的横向滚动区域scroll-view，当页面滚动到底部时继续上拉会导致置顶头部消失，松开回弹后头部又会出现。</strong><br>坑是社区里的朋友提出来的，我借了个iphone x 一预览，我嚓，还是真是个奇坑！<br>微信官方回复已复现正在解决中… 不想继续等下去的，暂时解决方法是<br><strong><em>监听页面的滚动区域，当滚动到底部时设置顶部横向滚动scroll-view的scroll-x=false来解决。</em></strong></p>\n</blockquote>\n<h2 id=\"写在最后\"><a href=\"#写在最后\" class=\"headerlink\" title=\"写在最后\"></a>写在最后</h2><p>以上便是我在小程序开发中有关于ios橡皮筋回弹效果的分享，示例代码已上传github,可自行下载体验。</p>\n<blockquote>\n<p><a href=\"https://github.com/YuniorZen/minicode-debug/tree/master/minicode01\" target=\"_blank\" rel=\"noopener\">https://github.com/YuniorZen/minicode-debug/tree/master/minicode01</a></p>\n</blockquote>\n<p>目前微信官方虽说已经着手解决(已两年)此类bug，但哪吒说 我命由我不由天，所以还是我们开发者多分享些解决方案自救来的快。<br>分享方案如有问题还望不吝指出，没有涉及到的坑也欢迎评论提出，一起学习和解决，后续也会基于此篇不断更新总结。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>提到ios系统的橡皮筋效果，作为开发者是又爱又恨，有想要这个效果又有不想要的，无奈的是却没有一个简单的开关来设置这个效果是否开启。<br>最近在开发小程序时也遇到有关于ios橡皮筋回弹的问题，这里分两部分（<strong><em>取消橡皮筋回弹效果和因为这个效果遇到的坑</em></strong>）和大家分享一下。</p>\n<h2 id=\"取消IOS橡皮筋回弹效果的解决方案\"><a href=\"#取消IOS橡皮筋回弹效果的解决方案\" class=\"headerlink\" title=\"取消IOS橡皮筋回弹效果的解决方案\"></a>取消IOS橡皮筋回弹效果的解决方案</h2><blockquote>\n<p><strong>1) 页面无滚动区域时，可通过页面json配置文件设置disableScroll:true禁止整个页面滚动，从而取消橡皮筋效果。</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;disableScroll&quot;:true</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p>测试代码：<a href=\"https://github.com/YuniorZen/minicode-debug/tree/master/minicode01/pages/demo1\" target=\"_blank\" rel=\"noopener\">https://github.com/YuniorZen/minicode-debug/tree/master/minicode01/pages/demo1</a></p>\n<blockquote>\n<p><strong>2) 页面有滚动区域，滚动区域通过view模拟实现，然后在页面json配置文件设置disableScroll:true禁止整个页面滚动，从而取消橡皮筋效果。</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">json文件配置</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;disableScroll&quot;:true</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">view元素模拟实现滚动样式</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  height: calc(100vh - 120rpx); //高度必须是固定的值</span><br><span class=\"line\">  overflow-y: auto;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p>不足之处在于view元素模拟的滚动区域滚动时不够连贯，没有scroll-view那种原生丝滑般的感觉。<br>测试代码：<a href=\"https://github.com/YuniorZen/minicode-debug/tree/master/minicode01/pages/demo2\" target=\"_blank\" rel=\"noopener\">https://github.com/YuniorZen/minicode-debug/tree/master/minicode01/pages/demo2</a></p>\n<blockquote>\n<p><strong>3) 页面有滚动区域，滚动区域使用scroll-view,这时通过disableScroll则无法实现，尝试设置一下scroll-view的scroll-y=”false“，上拉或下拉时居然不再触发橡皮筋的回弹啦，当然滚动区域也不能滚动。</strong><br>小脑袋动一动，解决方法有啦！<br><strong><em>通过设置一个变量scrollY动态控制滚动区域的滚动从而阻止回弹。</em></strong><br><strong><em>监听bindscrolltoupper\\bindscrolltolower当scroll-view区域滚动到顶部或底部时候设置scrollY:false来关闭页面滚动，从而阻止回弹。</em></strong><br><strong><em>监听bindtouchstart\\bindtouchmove 当用户反方向滑动的时候设置scrollY:true，再次开启页面滚动。</em></strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wxml滚动区域属性和事件处理，具体实现请点击测试代码链接</span><br><span class=\"line\">&lt;scroll-view scroll-y=&quot;&#123;&#123;scrollY&#125;&#125;&quot; class=&quot;list&quot; upper-threshold=&quot;5&quot; lower-threshold=&quot;5&quot;</span><br><span class=\"line\">bindscrolltoupper=&quot;bindscrolltoupper&quot; </span><br><span class=\"line\">bindscrolltolower=&quot;bindscrolltolower&quot; </span><br><span class=\"line\">bindtouchstart=&quot;touchstart&quot;</span><br><span class=\"line\">bindtouchmove=&quot;touchmove&quot;&gt;</span><br><span class=\"line\">&lt;view class=&quot;list-item&quot; wx:for=&quot;&#123;&#123;list&#125;&#125;&quot; wx:key=&quot;&#123;&#123;index&#125;&#125;&quot;&gt;&#123;&#123;item&#125;&#125;&lt;/view&gt;</span><br><span class=\"line\">&lt;/scroll-view&gt;</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p>相对view模拟实现滚动区域，scroll-view滚动更丝滑，不过每次滚动到底部或顶部的时候，再反向滑动时由于再次开启scroll-view滚动会有操作卡顿的感觉，暂时没想到好的解决方法，有解决的大佬希望提供一下想法，一起学习下。<br>测试代码：<a href=\"https://github.com/YuniorZen/minicode-debug/tree/master/minicode01/pages/demo3\" target=\"_blank\" rel=\"noopener\">https://github.com/YuniorZen/minicode-debug/tree/master/minicode01/pages/demo3</a></p>\n<h2 id=\"IOS橡皮筋效果遇到的坑\"><a href=\"#IOS橡皮筋效果遇到的坑\" class=\"headerlink\" title=\"IOS橡皮筋效果遇到的坑\"></a>IOS橡皮筋效果遇到的坑</h2><blockquote>\n<p><strong>1) 操作左滑删除组件时上下移动，会触发橡皮筋效果导致页面抖动的问题</strong><br>这个坑的严重程度看设计师的意愿了，反正我们团队目前是需要解决的，方案类似取消橡皮筋解决方案的第三种<br><strong><em>在左滑的时候关闭scroll-view的滚动，取消时再次开启滚动</em></strong></p>\n</blockquote>\n<blockquote>\n<p><strong>2) 如果页面顶部有置顶的横向滚动区域scroll-view，当页面滚动到底部时继续上拉会导致置顶头部消失，松开回弹后头部又会出现。</strong><br>坑是社区里的朋友提出来的，我借了个iphone x 一预览，我嚓，还是真是个奇坑！<br>微信官方回复已复现正在解决中… 不想继续等下去的，暂时解决方法是<br><strong><em>监听页面的滚动区域，当滚动到底部时设置顶部横向滚动scroll-view的scroll-x=false来解决。</em></strong></p>\n</blockquote>\n<h2 id=\"写在最后\"><a href=\"#写在最后\" class=\"headerlink\" title=\"写在最后\"></a>写在最后</h2><p>以上便是我在小程序开发中有关于ios橡皮筋回弹效果的分享，示例代码已上传github,可自行下载体验。</p>\n<blockquote>\n<p><a href=\"https://github.com/YuniorZen/minicode-debug/tree/master/minicode01\" target=\"_blank\" rel=\"noopener\">https://github.com/YuniorZen/minicode-debug/tree/master/minicode01</a></p>\n</blockquote>\n<p>目前微信官方虽说已经着手解决(已两年)此类bug，但哪吒说 我命由我不由天，所以还是我们开发者多分享些解决方案自救来的快。<br>分享方案如有问题还望不吝指出，没有涉及到的坑也欢迎评论提出，一起学习和解决，后续也会基于此篇不断更新总结。</p>\n"},{"title":"小程序顶部自定义导航组件实现原理及坑分享","date":"2019-10-25T10:45:39.000Z","_content":"\n\n## 为什么使用自定义导航\n对比默认导航栏，我们会更需要：\n- 统一Android、IOS手机对于页面title的展示样式及位置\n- 更丰富的导航栏定制效果，如添加home图标等\n- 左上角返回事件的监听处理\n- 统一实现双击返回顶部功能\n\n## 自定义导航组件实现思路\n> 自定义导航组件实现的核心是需要计算导航栏的真实高度\n\n这里以官方文档->扩展能力中的Navigation组件为例分析实现思路。当使用\"navigationStyle\": \"custom\"时，默认导航被移除，页面的开始位置变成了屏幕顶部，这时我们需要实现的导航栏是在状态栏下面。\n> 导航栏的真实高度=状态栏高度+导航栏内容。\n\n![状态栏+导航栏内容图](/assets/image/status-bar-2019-10-23.png)\n\n***使用wx.getSystemInfo获取到statusBarHeight便是导航栏的高度，但是导航栏内容高度呢？***\n\n有人可能觉得导航栏内容高度顾名思义就是导航栏内容高度啊，内容撑起还用管嘛！要，必须要！\n**因为右上角胶囊按钮是原生加载的，我们的导航栏内容需要正好贴在胶囊的下方且垂直居中。**\n> 导航栏内容高度=（胶囊按钮的顶部距离 - 状态高度）*2 + 胶囊高度\n\n![状态栏+导航栏内容+胶囊图](/assets/image/ios-android-status-bar-2019-10-23.png)\n\n如何计算胶囊的数据呢？幸运的是我们有 **wx.getMenuButtonBoundingClientRect()** 获取胶囊按钮的布局位置信息，那么动态计算导航栏的内容高度就很方便啦。\n好了，以上就是动态计算的核心思路，我们再来看官方Navigation组件高度是怎么实现的\n```\npage{--height:44px;--right:190rpx;}\n.weui-navigation-bar .android{--height:48px;--right:222rpx}\n.weui-navigation-bar__inner{\n\tposition:fixed;top:0;left:0;z-index:5001;display:flex;align-items:center;\n\theight:var(--height);padding-right:var(--right);width:calc(100% - var(--right))\n}\n```\n**导航栏内容的高度是通过- -height这个css变量提前声明好的，安卓机型会重新覆盖为新的css变量值，目前没发现有适配问题。**\n官方就是官方啊，具体尺寸都知道，那就不用一番计算周折啦，直接拿来主义即可。\n导航的布局位置已经搞定啦，剩下就是写具体的内容，不同业务实现需求不同这里就不一一赘述了。\n\n\n## 完善官方顶部导航组件\n本着拿来主义，直接使用官方Navigation组件，但在实际业务开发中还是遇到不少需要自定义的需求，就比如：\n- loadding样式没实现\n- 标题内容超出没有出现省略号\n- 和原生顶部的样式不兼容，导致单个页面引入时跳转有明显差异出现\n- 没有双击返回顶部功能开关功能\n- 引入页面需要获取导航栏的高度，来控制其他元素距离顶部的位置，\n- 不能根据页面栈数据动态显示隐藏back按钮，\n\n\n针对以上需求，我们对官方的组件进行二次完善开发，满足常规的自定义需求绰绰有余，直接引入开箱即用。\n**源码使用示例 https://github.com/YuniorZen/minicode-debug/tree/master/minicode02 **\n![顶部导航示例](/assets/image/navigation-video-2019-10-25.gif)\n** 使用说明 **\n```\n/*自定义头部导航组件，基于官方组件Navigation开发。*/\n\n<navigation-bar title=\"会员中心\" bindgetBarInfo=\"getBarInfo\"></navigation-bar>\n```\n**组件属性列表**\n\n| 属性   \t\t\t| 类型 \t\t\t| 描述                                                         \t|\n| ------ \t\t\t| -----\t\t\t| ------------------------------------------------------------ \t|\n| bindgetBarInfo   \t| function\t\t| 组件实例载入页面时触发此事件，首参为event对象，event.detail携带当前导航栏信息，如导航栏高度 event.detail.topBarHeight\t   |\n| bindback \t\t\t| function\t\t| 点击back按钮触发此事件响应函数       \t\t\t\t\t\t\t|\n| backImage \t\t| string\t\t| back按钮的图标地址       \t\t\t\t\t\t\t\t\t\t|\n| homeImage \t\t| string\t\t| home按钮的图标地址  \n| ext-class \t\t| string\t\t| 添加在组件内部结构的class，可用于修改组件内部的样式       \t|\n| title \t\t\t| string\t\t| 导航标题，如果不提供为空       \t\t\t\t\t\t\t\t|\n| background \t\t| string\t\t| 导航背景色，默认#ffffff       \t\t\t\t\t\t\t\t|\n| color \t\t\t| string\t\t| 导航字体颜色       \t\t\t\t\t\t\t\t\t\t\t|\n| dbclickBackTop \t| boolean\t\t| 是否开启双击返回顶部功能，默认true       \t\t\t\t\t\t|\n| border\t\t \t| boolean\t\t| 是否显示顶部导航下边框分割线，默认false    \t\t\t\t\t|\n| loading\t\t \t| boolean\t\t| 是否显示标题左侧的loading，默认false       \t\t\t\t\t|\n| show\t\t\t \t| boolean\t\t| 显示隐藏导航，隐藏的时候navigation的高度占位还在,默认true     |\n| left \t\t\t\t| boolean\t\t| 左侧区域是否使用slot内容，默认false      \t\t\t\t\t\t|\n| center \t\t\t| boolean\t\t| 中间区域是否使用slot内容，默认false      \t\t\t\t\t\t|\n\n**Slot**\n\n| name   | 描述                                                         |\n| ------ | ------------------------------------------------------------ |\n| left   | 左侧slot，在back按钮位置显示，当left属性为true的时候有效 \t|\n| center | 标题slot，在标题位置显示，当center属性为true的时候有效       |\n\n## 自定义顶部导航目前存在的坑\n- 弹窗的背景蒙层无法覆盖原生胶囊按钮\n- 页面下拉刷新的圆点会被自定义导航遮盖\n\n如果要自定义顶部导航，以上问题避免不了，只能忍着接受。\n目前还没遇到完美的解决方案，针对下拉刷新圆点被遮挡的问题微信官方还在需求开发中，如果你有好的想法欢迎留言反馈，一起学习交流。\n\n\n","source":"_posts/小程序头部自定义导航组件实现原理及坑分享.md","raw":"---\ntitle: 小程序顶部自定义导航组件实现原理及坑分享\ndate: 2019-10-25 18:45:39\ntags:\n\t- 小程序\n\t- 自定义导航组件\n\t- 顶部导航组件实现原理\n\t- 小程序导航组件的坑\n---\n\n\n## 为什么使用自定义导航\n对比默认导航栏，我们会更需要：\n- 统一Android、IOS手机对于页面title的展示样式及位置\n- 更丰富的导航栏定制效果，如添加home图标等\n- 左上角返回事件的监听处理\n- 统一实现双击返回顶部功能\n\n## 自定义导航组件实现思路\n> 自定义导航组件实现的核心是需要计算导航栏的真实高度\n\n这里以官方文档->扩展能力中的Navigation组件为例分析实现思路。当使用\"navigationStyle\": \"custom\"时，默认导航被移除，页面的开始位置变成了屏幕顶部，这时我们需要实现的导航栏是在状态栏下面。\n> 导航栏的真实高度=状态栏高度+导航栏内容。\n\n![状态栏+导航栏内容图](/assets/image/status-bar-2019-10-23.png)\n\n***使用wx.getSystemInfo获取到statusBarHeight便是导航栏的高度，但是导航栏内容高度呢？***\n\n有人可能觉得导航栏内容高度顾名思义就是导航栏内容高度啊，内容撑起还用管嘛！要，必须要！\n**因为右上角胶囊按钮是原生加载的，我们的导航栏内容需要正好贴在胶囊的下方且垂直居中。**\n> 导航栏内容高度=（胶囊按钮的顶部距离 - 状态高度）*2 + 胶囊高度\n\n![状态栏+导航栏内容+胶囊图](/assets/image/ios-android-status-bar-2019-10-23.png)\n\n如何计算胶囊的数据呢？幸运的是我们有 **wx.getMenuButtonBoundingClientRect()** 获取胶囊按钮的布局位置信息，那么动态计算导航栏的内容高度就很方便啦。\n好了，以上就是动态计算的核心思路，我们再来看官方Navigation组件高度是怎么实现的\n```\npage{--height:44px;--right:190rpx;}\n.weui-navigation-bar .android{--height:48px;--right:222rpx}\n.weui-navigation-bar__inner{\n\tposition:fixed;top:0;left:0;z-index:5001;display:flex;align-items:center;\n\theight:var(--height);padding-right:var(--right);width:calc(100% - var(--right))\n}\n```\n**导航栏内容的高度是通过- -height这个css变量提前声明好的，安卓机型会重新覆盖为新的css变量值，目前没发现有适配问题。**\n官方就是官方啊，具体尺寸都知道，那就不用一番计算周折啦，直接拿来主义即可。\n导航的布局位置已经搞定啦，剩下就是写具体的内容，不同业务实现需求不同这里就不一一赘述了。\n\n\n## 完善官方顶部导航组件\n本着拿来主义，直接使用官方Navigation组件，但在实际业务开发中还是遇到不少需要自定义的需求，就比如：\n- loadding样式没实现\n- 标题内容超出没有出现省略号\n- 和原生顶部的样式不兼容，导致单个页面引入时跳转有明显差异出现\n- 没有双击返回顶部功能开关功能\n- 引入页面需要获取导航栏的高度，来控制其他元素距离顶部的位置，\n- 不能根据页面栈数据动态显示隐藏back按钮，\n\n\n针对以上需求，我们对官方的组件进行二次完善开发，满足常规的自定义需求绰绰有余，直接引入开箱即用。\n**源码使用示例 https://github.com/YuniorZen/minicode-debug/tree/master/minicode02 **\n![顶部导航示例](/assets/image/navigation-video-2019-10-25.gif)\n** 使用说明 **\n```\n/*自定义头部导航组件，基于官方组件Navigation开发。*/\n\n<navigation-bar title=\"会员中心\" bindgetBarInfo=\"getBarInfo\"></navigation-bar>\n```\n**组件属性列表**\n\n| 属性   \t\t\t| 类型 \t\t\t| 描述                                                         \t|\n| ------ \t\t\t| -----\t\t\t| ------------------------------------------------------------ \t|\n| bindgetBarInfo   \t| function\t\t| 组件实例载入页面时触发此事件，首参为event对象，event.detail携带当前导航栏信息，如导航栏高度 event.detail.topBarHeight\t   |\n| bindback \t\t\t| function\t\t| 点击back按钮触发此事件响应函数       \t\t\t\t\t\t\t|\n| backImage \t\t| string\t\t| back按钮的图标地址       \t\t\t\t\t\t\t\t\t\t|\n| homeImage \t\t| string\t\t| home按钮的图标地址  \n| ext-class \t\t| string\t\t| 添加在组件内部结构的class，可用于修改组件内部的样式       \t|\n| title \t\t\t| string\t\t| 导航标题，如果不提供为空       \t\t\t\t\t\t\t\t|\n| background \t\t| string\t\t| 导航背景色，默认#ffffff       \t\t\t\t\t\t\t\t|\n| color \t\t\t| string\t\t| 导航字体颜色       \t\t\t\t\t\t\t\t\t\t\t|\n| dbclickBackTop \t| boolean\t\t| 是否开启双击返回顶部功能，默认true       \t\t\t\t\t\t|\n| border\t\t \t| boolean\t\t| 是否显示顶部导航下边框分割线，默认false    \t\t\t\t\t|\n| loading\t\t \t| boolean\t\t| 是否显示标题左侧的loading，默认false       \t\t\t\t\t|\n| show\t\t\t \t| boolean\t\t| 显示隐藏导航，隐藏的时候navigation的高度占位还在,默认true     |\n| left \t\t\t\t| boolean\t\t| 左侧区域是否使用slot内容，默认false      \t\t\t\t\t\t|\n| center \t\t\t| boolean\t\t| 中间区域是否使用slot内容，默认false      \t\t\t\t\t\t|\n\n**Slot**\n\n| name   | 描述                                                         |\n| ------ | ------------------------------------------------------------ |\n| left   | 左侧slot，在back按钮位置显示，当left属性为true的时候有效 \t|\n| center | 标题slot，在标题位置显示，当center属性为true的时候有效       |\n\n## 自定义顶部导航目前存在的坑\n- 弹窗的背景蒙层无法覆盖原生胶囊按钮\n- 页面下拉刷新的圆点会被自定义导航遮盖\n\n如果要自定义顶部导航，以上问题避免不了，只能忍着接受。\n目前还没遇到完美的解决方案，针对下拉刷新圆点被遮挡的问题微信官方还在需求开发中，如果你有好的想法欢迎留言反馈，一起学习交流。\n\n\n","slug":"小程序头部自定义导航组件实现原理及坑分享","published":1,"updated":"2019-11-30T14:46:41.402Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3n56j5600067z7x2n375u1j","content":"<h2 id=\"为什么使用自定义导航\"><a href=\"#为什么使用自定义导航\" class=\"headerlink\" title=\"为什么使用自定义导航\"></a>为什么使用自定义导航</h2><p>对比默认导航栏，我们会更需要：</p>\n<ul>\n<li>统一Android、IOS手机对于页面title的展示样式及位置</li>\n<li>更丰富的导航栏定制效果，如添加home图标等</li>\n<li>左上角返回事件的监听处理</li>\n<li>统一实现双击返回顶部功能</li>\n</ul>\n<h2 id=\"自定义导航组件实现思路\"><a href=\"#自定义导航组件实现思路\" class=\"headerlink\" title=\"自定义导航组件实现思路\"></a>自定义导航组件实现思路</h2><blockquote>\n<p>自定义导航组件实现的核心是需要计算导航栏的真实高度</p>\n</blockquote>\n<p>这里以官方文档-&gt;扩展能力中的Navigation组件为例分析实现思路。当使用”navigationStyle”: “custom”时，默认导航被移除，页面的开始位置变成了屏幕顶部，这时我们需要实现的导航栏是在状态栏下面。</p>\n<blockquote>\n<p>导航栏的真实高度=状态栏高度+导航栏内容。</p>\n</blockquote>\n<p><img src=\"/assets/image/status-bar-2019-10-23.png\" alt=\"状态栏+导航栏内容图\"></p>\n<p><strong><em>使用wx.getSystemInfo获取到statusBarHeight便是导航栏的高度，但是导航栏内容高度呢？</em></strong></p>\n<p>有人可能觉得导航栏内容高度顾名思义就是导航栏内容高度啊，内容撑起还用管嘛！要，必须要！<br><strong>因为右上角胶囊按钮是原生加载的，我们的导航栏内容需要正好贴在胶囊的下方且垂直居中。</strong></p>\n<blockquote>\n<p>导航栏内容高度=（胶囊按钮的顶部距离 - 状态高度）*2 + 胶囊高度</p>\n</blockquote>\n<p><img src=\"/assets/image/ios-android-status-bar-2019-10-23.png\" alt=\"状态栏+导航栏内容+胶囊图\"></p>\n<p>如何计算胶囊的数据呢？幸运的是我们有 <strong>wx.getMenuButtonBoundingClientRect()</strong> 获取胶囊按钮的布局位置信息，那么动态计算导航栏的内容高度就很方便啦。<br>好了，以上就是动态计算的核心思路，我们再来看官方Navigation组件高度是怎么实现的<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">page&#123;--height:44px;--right:190rpx;&#125;</span><br><span class=\"line\">.weui-navigation-bar .android&#123;--height:48px;--right:222rpx&#125;</span><br><span class=\"line\">.weui-navigation-bar__inner&#123;</span><br><span class=\"line\">\tposition:fixed;top:0;left:0;z-index:5001;display:flex;align-items:center;</span><br><span class=\"line\">\theight:var(--height);padding-right:var(--right);width:calc(100% - var(--right))</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>导航栏内容的高度是通过- -height这个css变量提前声明好的，安卓机型会重新覆盖为新的css变量值，目前没发现有适配问题。</strong><br>官方就是官方啊，具体尺寸都知道，那就不用一番计算周折啦，直接拿来主义即可。<br>导航的布局位置已经搞定啦，剩下就是写具体的内容，不同业务实现需求不同这里就不一一赘述了。</p>\n<h2 id=\"完善官方顶部导航组件\"><a href=\"#完善官方顶部导航组件\" class=\"headerlink\" title=\"完善官方顶部导航组件\"></a>完善官方顶部导航组件</h2><p>本着拿来主义，直接使用官方Navigation组件，但在实际业务开发中还是遇到不少需要自定义的需求，就比如：</p>\n<ul>\n<li>loadding样式没实现</li>\n<li>标题内容超出没有出现省略号</li>\n<li>和原生顶部的样式不兼容，导致单个页面引入时跳转有明显差异出现</li>\n<li>没有双击返回顶部功能开关功能</li>\n<li>引入页面需要获取导航栏的高度，来控制其他元素距离顶部的位置，</li>\n<li>不能根据页面栈数据动态显示隐藏back按钮，</li>\n</ul>\n<p>针对以上需求，我们对官方的组件进行二次完善开发，满足常规的自定义需求绰绰有余，直接引入开箱即用。<br><strong>源码使用示例 <a href=\"https://github.com/YuniorZen/minicode-debug/tree/master/minicode02\" target=\"_blank\" rel=\"noopener\">https://github.com/YuniorZen/minicode-debug/tree/master/minicode02</a> </strong><br><img src=\"/assets/image/navigation-video-2019-10-25.gif\" alt=\"顶部导航示例\"><br><strong> 使用说明 </strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/*自定义头部导航组件，基于官方组件Navigation开发。*/</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;navigation-bar title=&quot;会员中心&quot; bindgetBarInfo=&quot;getBarInfo&quot;&gt;&lt;/navigation-bar&gt;</span><br></pre></td></tr></table></figure></p>\n<p><strong>组件属性列表</strong></p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>bindgetBarInfo</td>\n<td>function</td>\n<td>组件实例载入页面时触发此事件，首参为event对象，event.detail携带当前导航栏信息，如导航栏高度 event.detail.topBarHeight</td>\n</tr>\n<tr>\n<td>bindback</td>\n<td>function</td>\n<td>点击back按钮触发此事件响应函数</td>\n</tr>\n<tr>\n<td>backImage</td>\n<td>string</td>\n<td>back按钮的图标地址</td>\n</tr>\n<tr>\n<td>homeImage</td>\n<td>string</td>\n<td>home按钮的图标地址  </td>\n</tr>\n<tr>\n<td>ext-class</td>\n<td>string</td>\n<td>添加在组件内部结构的class，可用于修改组件内部的样式</td>\n</tr>\n<tr>\n<td>title</td>\n<td>string</td>\n<td>导航标题，如果不提供为空</td>\n</tr>\n<tr>\n<td>background</td>\n<td>string</td>\n<td>导航背景色，默认#ffffff</td>\n</tr>\n<tr>\n<td>color</td>\n<td>string</td>\n<td>导航字体颜色</td>\n</tr>\n<tr>\n<td>dbclickBackTop</td>\n<td>boolean</td>\n<td>是否开启双击返回顶部功能，默认true</td>\n</tr>\n<tr>\n<td>border</td>\n<td>boolean</td>\n<td>是否显示顶部导航下边框分割线，默认false</td>\n</tr>\n<tr>\n<td>loading</td>\n<td>boolean</td>\n<td>是否显示标题左侧的loading，默认false</td>\n</tr>\n<tr>\n<td>show</td>\n<td>boolean</td>\n<td>显示隐藏导航，隐藏的时候navigation的高度占位还在,默认true</td>\n</tr>\n<tr>\n<td>left</td>\n<td>boolean</td>\n<td>左侧区域是否使用slot内容，默认false</td>\n</tr>\n<tr>\n<td>center</td>\n<td>boolean</td>\n<td>中间区域是否使用slot内容，默认false</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Slot</strong></p>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>left</td>\n<td>左侧slot，在back按钮位置显示，当left属性为true的时候有效</td>\n</tr>\n<tr>\n<td>center</td>\n<td>标题slot，在标题位置显示，当center属性为true的时候有效</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"自定义顶部导航目前存在的坑\"><a href=\"#自定义顶部导航目前存在的坑\" class=\"headerlink\" title=\"自定义顶部导航目前存在的坑\"></a>自定义顶部导航目前存在的坑</h2><ul>\n<li>弹窗的背景蒙层无法覆盖原生胶囊按钮</li>\n<li>页面下拉刷新的圆点会被自定义导航遮盖</li>\n</ul>\n<p>如果要自定义顶部导航，以上问题避免不了，只能忍着接受。<br>目前还没遇到完美的解决方案，针对下拉刷新圆点被遮挡的问题微信官方还在需求开发中，如果你有好的想法欢迎留言反馈，一起学习交流。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"为什么使用自定义导航\"><a href=\"#为什么使用自定义导航\" class=\"headerlink\" title=\"为什么使用自定义导航\"></a>为什么使用自定义导航</h2><p>对比默认导航栏，我们会更需要：</p>\n<ul>\n<li>统一Android、IOS手机对于页面title的展示样式及位置</li>\n<li>更丰富的导航栏定制效果，如添加home图标等</li>\n<li>左上角返回事件的监听处理</li>\n<li>统一实现双击返回顶部功能</li>\n</ul>\n<h2 id=\"自定义导航组件实现思路\"><a href=\"#自定义导航组件实现思路\" class=\"headerlink\" title=\"自定义导航组件实现思路\"></a>自定义导航组件实现思路</h2><blockquote>\n<p>自定义导航组件实现的核心是需要计算导航栏的真实高度</p>\n</blockquote>\n<p>这里以官方文档-&gt;扩展能力中的Navigation组件为例分析实现思路。当使用”navigationStyle”: “custom”时，默认导航被移除，页面的开始位置变成了屏幕顶部，这时我们需要实现的导航栏是在状态栏下面。</p>\n<blockquote>\n<p>导航栏的真实高度=状态栏高度+导航栏内容。</p>\n</blockquote>\n<p><img src=\"/assets/image/status-bar-2019-10-23.png\" alt=\"状态栏+导航栏内容图\"></p>\n<p><strong><em>使用wx.getSystemInfo获取到statusBarHeight便是导航栏的高度，但是导航栏内容高度呢？</em></strong></p>\n<p>有人可能觉得导航栏内容高度顾名思义就是导航栏内容高度啊，内容撑起还用管嘛！要，必须要！<br><strong>因为右上角胶囊按钮是原生加载的，我们的导航栏内容需要正好贴在胶囊的下方且垂直居中。</strong></p>\n<blockquote>\n<p>导航栏内容高度=（胶囊按钮的顶部距离 - 状态高度）*2 + 胶囊高度</p>\n</blockquote>\n<p><img src=\"/assets/image/ios-android-status-bar-2019-10-23.png\" alt=\"状态栏+导航栏内容+胶囊图\"></p>\n<p>如何计算胶囊的数据呢？幸运的是我们有 <strong>wx.getMenuButtonBoundingClientRect()</strong> 获取胶囊按钮的布局位置信息，那么动态计算导航栏的内容高度就很方便啦。<br>好了，以上就是动态计算的核心思路，我们再来看官方Navigation组件高度是怎么实现的<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">page&#123;--height:44px;--right:190rpx;&#125;</span><br><span class=\"line\">.weui-navigation-bar .android&#123;--height:48px;--right:222rpx&#125;</span><br><span class=\"line\">.weui-navigation-bar__inner&#123;</span><br><span class=\"line\">\tposition:fixed;top:0;left:0;z-index:5001;display:flex;align-items:center;</span><br><span class=\"line\">\theight:var(--height);padding-right:var(--right);width:calc(100% - var(--right))</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>导航栏内容的高度是通过- -height这个css变量提前声明好的，安卓机型会重新覆盖为新的css变量值，目前没发现有适配问题。</strong><br>官方就是官方啊，具体尺寸都知道，那就不用一番计算周折啦，直接拿来主义即可。<br>导航的布局位置已经搞定啦，剩下就是写具体的内容，不同业务实现需求不同这里就不一一赘述了。</p>\n<h2 id=\"完善官方顶部导航组件\"><a href=\"#完善官方顶部导航组件\" class=\"headerlink\" title=\"完善官方顶部导航组件\"></a>完善官方顶部导航组件</h2><p>本着拿来主义，直接使用官方Navigation组件，但在实际业务开发中还是遇到不少需要自定义的需求，就比如：</p>\n<ul>\n<li>loadding样式没实现</li>\n<li>标题内容超出没有出现省略号</li>\n<li>和原生顶部的样式不兼容，导致单个页面引入时跳转有明显差异出现</li>\n<li>没有双击返回顶部功能开关功能</li>\n<li>引入页面需要获取导航栏的高度，来控制其他元素距离顶部的位置，</li>\n<li>不能根据页面栈数据动态显示隐藏back按钮，</li>\n</ul>\n<p>针对以上需求，我们对官方的组件进行二次完善开发，满足常规的自定义需求绰绰有余，直接引入开箱即用。<br><strong>源码使用示例 <a href=\"https://github.com/YuniorZen/minicode-debug/tree/master/minicode02\" target=\"_blank\" rel=\"noopener\">https://github.com/YuniorZen/minicode-debug/tree/master/minicode02</a> </strong><br><img src=\"/assets/image/navigation-video-2019-10-25.gif\" alt=\"顶部导航示例\"><br><strong> 使用说明 </strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/*自定义头部导航组件，基于官方组件Navigation开发。*/</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;navigation-bar title=&quot;会员中心&quot; bindgetBarInfo=&quot;getBarInfo&quot;&gt;&lt;/navigation-bar&gt;</span><br></pre></td></tr></table></figure></p>\n<p><strong>组件属性列表</strong></p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>bindgetBarInfo</td>\n<td>function</td>\n<td>组件实例载入页面时触发此事件，首参为event对象，event.detail携带当前导航栏信息，如导航栏高度 event.detail.topBarHeight</td>\n</tr>\n<tr>\n<td>bindback</td>\n<td>function</td>\n<td>点击back按钮触发此事件响应函数</td>\n</tr>\n<tr>\n<td>backImage</td>\n<td>string</td>\n<td>back按钮的图标地址</td>\n</tr>\n<tr>\n<td>homeImage</td>\n<td>string</td>\n<td>home按钮的图标地址  </td>\n</tr>\n<tr>\n<td>ext-class</td>\n<td>string</td>\n<td>添加在组件内部结构的class，可用于修改组件内部的样式</td>\n</tr>\n<tr>\n<td>title</td>\n<td>string</td>\n<td>导航标题，如果不提供为空</td>\n</tr>\n<tr>\n<td>background</td>\n<td>string</td>\n<td>导航背景色，默认#ffffff</td>\n</tr>\n<tr>\n<td>color</td>\n<td>string</td>\n<td>导航字体颜色</td>\n</tr>\n<tr>\n<td>dbclickBackTop</td>\n<td>boolean</td>\n<td>是否开启双击返回顶部功能，默认true</td>\n</tr>\n<tr>\n<td>border</td>\n<td>boolean</td>\n<td>是否显示顶部导航下边框分割线，默认false</td>\n</tr>\n<tr>\n<td>loading</td>\n<td>boolean</td>\n<td>是否显示标题左侧的loading，默认false</td>\n</tr>\n<tr>\n<td>show</td>\n<td>boolean</td>\n<td>显示隐藏导航，隐藏的时候navigation的高度占位还在,默认true</td>\n</tr>\n<tr>\n<td>left</td>\n<td>boolean</td>\n<td>左侧区域是否使用slot内容，默认false</td>\n</tr>\n<tr>\n<td>center</td>\n<td>boolean</td>\n<td>中间区域是否使用slot内容，默认false</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Slot</strong></p>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>left</td>\n<td>左侧slot，在back按钮位置显示，当left属性为true的时候有效</td>\n</tr>\n<tr>\n<td>center</td>\n<td>标题slot，在标题位置显示，当center属性为true的时候有效</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"自定义顶部导航目前存在的坑\"><a href=\"#自定义顶部导航目前存在的坑\" class=\"headerlink\" title=\"自定义顶部导航目前存在的坑\"></a>自定义顶部导航目前存在的坑</h2><ul>\n<li>弹窗的背景蒙层无法覆盖原生胶囊按钮</li>\n<li>页面下拉刷新的圆点会被自定义导航遮盖</li>\n</ul>\n<p>如果要自定义顶部导航，以上问题避免不了，只能忍着接受。<br>目前还没遇到完美的解决方案，针对下拉刷新圆点被遮挡的问题微信官方还在需求开发中，如果你有好的想法欢迎留言反馈，一起学习交流。</p>\n"},{"title":"可视化页面编辑管理系统开发实践分享","date":"2019-11-30T14:00:00.000Z","_content":"\n\n## 背景\n之前参与开发一个小程序商城，涉及非常多的落地页面需要前端开发维护，又由于小程序包大小限制，不能完成用小程序代码一一实现，所以最后决定把落地页的需求拆成一个单独的产品-落地页管理系统，通过可视化的界面编辑维护小程序和H5的落地页面，落地页面通过获取后台数据动态生成页面内容。\n对于运营同事来说，在没有前端同事配合的情况下，也可通过可视化的操作来搭建所需的落地页面。解决页面生成的效率问题，同时释放开发人员。\n\n## 落地页管理系统的需求\n- 页面的可维护（新建、编辑、删除、状态管理等）。\n- 页面的常见功能或属性编辑（标题，背景、有效期、微信自定义分享、返回顶部功能等）。\n- 组成页面的元素组件化，可自由拖拽组装，编辑修改组件属性。\n- 页面结构数据化，客户端根据数据动态渲染落地页面。\n\n\n## 功能需求的技术实现\n\n### 技术栈\n后端技术栈 node+Koa+mongodb，提供落地页的更删改查API服务、素材的上传更新及有效期定时检测等。 \n前端技术栈 Vue+Vuex+Vue-route+EmenetUI+Axios，开发实现组成页面所需的基础组件及业务营销组件。\n后端只是简单存储记录，本篇主要分享可视化页面编辑和渲染的前端技术实现。\n\n### 项目目录说明\n```\nsrc\t\t\t\t\t\t\t\n|-- App.vue\t\t\t\t\t\t\t\t\n|-- main.js                       // 项目入口\n|-- components                    // 公共组件目录\n|   |-- BreadCrumb                \t// 面包屑导航组件\n|   |   |-- breadcrumb.scss\n|   |   |-- index.vue\n|   |-- Carousel                  \t// 轮播图组件\n|   |   |-- carousel.scss\n|   |   |-- index.vue\n|   |-- CarouselSet               \t// 轮播图属性编辑组件\n|   |   |-- index.vue\n|   |-- ContextMenu               \t// 右键菜单组件\n|   |   |-- contextmenu.scss\n|   |   |-- index.vue\n|   |-- Event                     \t// 事件组件\n|   |   |-- event.scss\n|   |   |-- index.vue\n|   |-- EventSet                  \t// 事件属性编辑组件\n|   |   |-- index.vue\n|   |-- Goods                     \t// 商品组件\n|   |   |-- goods.scss\n|   |   |-- index.vue\n|   |-- GoodsSet                  \t// 商品属性编辑组件\n|   |   |-- index.vue\n|   |-- HeadInfo                  \t// 头部显示组件\n|   |   |-- headinfo.scss\n|   |   |-- index.vue\n|   |-- Picture                   \t// 图片组件\n|   |   |-- index.vue\n|   |   |-- picture.scss\n|   |-- PictureSet                \t// 图片属性编辑组件\n|   |   |-- index.vue\n|   |-- Video                     \t// 视频组件\n|   |   |-- index.vue\n|   |   |-- video.scss\n|   |-- VideoSet                  \t// 视频属性编辑组件\n|       |-- index.vue\n|-- pages                         // 页面目录\n|   |-- LandPage                  \t// 落地页渲染页面\n|   |   |-- index.vue\n|   |   |-- landpage.scss\n|   |-- Login                     \t// 登陆页面\n|   |   |-- index.vue\n|   |   |-- login.scss\n|   |-- PageCreate                \t// 落地页创建页面\n|   |   |-- index.vue\n|   |   |-- pagecreate.scss\n|   |   |-- components            \t// 创建页面分成左侧组件列表、中间窗口渲染组件、右侧属性编辑组件\n|   |       |-- pageCenter        \t// 中间窗口渲染组件\n|   |       |   |-- index.vue\n|   |       |   |-- pagecenter.scss\n|   |       |-- pageRight         \t// 右侧属性编辑组件\n|   |           |-- index.vue\n|   |           |-- pageright.scss\n|   |-- PageEditor                \t// 落地页编辑页面，共享创建页面，根据路由判断实现不同业务需求\n|   |   |-- index.vue\n|   |   |-- pageeditor.scss\n|   |-- PageList                  \t// 落地页列表页面（新建、编辑、删除、状态管理等）\n|   |   |-- index.vue\n|   |   |-- pagelist.scss\n|   |-- PagePreview               \t// 落地页预览页面\n|       |-- index.vue\n|       |-- pagepreview.scss\n|-- assets                        // 资源目录（样式文件）\n|   |-- style\n|       |-- animate.css\n|       |-- common.scss\n|       |-- normalize.css\n|       |-- var.scss\n|-- http                          // http请求的接口与方法\n|   |-- index.js\n|   |-- request.js\n|-- router                        // 页面路由目录\n|   |-- index.js\n|   |-- permission.js\n|-- store                         // vuex状态管理目录\n|   |-- actions.js\n|   |-- index.js\n|   |-- mutations.js\n|   |-- state.js\n|-- utility                       // 常用工具类函数与静态配置文件目录\n\t|-- const.js\n\t|-- filter.js\n\t|-- index.js\n\t|-- landpage.js\n```\n\n### 页面元素组件化和数据化\n对落地页中的布局和功能需求进行分析总结并抽象出大概元素组件，分为基础组件（图片、视频、轮播图）和营销组件（事件、商品）。\n落地页面的数据结构如下：\n```\npage:{\n\t//页面名称\n\tname:'',\n\t//页面标题\n\ttitle:'',\n\t//页面唯一的key\n\turlKey:'',\n\t//是否需要有效期\n\tneedExpire:false,\n\texpireDate:'',  \n\t//额外功能字段\n\textra:{\n\t\t//页面背景色\n\t\tbackgroundColor:'',\n\t\t//是否需要返回顶部按钮\n\t\tneedBackTop:false,\n\t\tbackTopImage:'',\n\t\t//是否需要自定义分享\n\t\tneedShare:false,\n\t\tshareText:'',\n\t\tshareImage:'',\n\t},\n\t//页面中的组件\n\tcomponents:[\n\t\t{ type:'Picture', name:'图片' }\n\t]\n}\n```\n落地页的创建页面大致如下，分为左侧元素组件列表、中间实时渲染窗口和右侧组件属性编辑区域。\n![创建页面布局图片](/assets/image/landpage-create-2019-11-30.png)\n页面中可以有多个元素组件，然后每个元素组件都有自己的特有属性，每个元素组件对应一个属性组件用来编辑该组件的特有属性，在公共组件目录中可以看到对应的Set组件。\n\n### 从组件的拖拽到属性编辑与实时渲染\n> 从左侧拖拽组件到中间窗口即为页面中添加一个元素组件，新组件为当前激活组件，右侧区域会根据当前激活组件动态加载对应的属性编辑组件。\n\n当拖拽左侧元素组件时，使用@dragstart事件记录当前拖拽的元素，中间窗口使用@dragover计算正在拖拽元素的位置坐标实现拖拽排序和层级元素的判断，@drop事件中根据之前的记录和判断生成元素组件数据到page.components或元素组件的children层级数组中。\n```\n<!-- 中间窗口的渲染模版代码 -->\n<div class=\"page-wraper\" @dragover=\"dragover\" @drop=\"drop\" :style=\"style\">\n    <div\n      v-for=\"(component) in components\"\n      :key=\"component.id\"\n      :class=\"`component-wraper`\">\n      <!-- 动态组件加载 -->\n      <component :class=\"`${component.id==activeComponent.id?'active':''} ${relativeComponent&&relativeComponent.id==component.id?('hover-'+relativeType):''}`\"\n        v-bind:is=\"component.type\"\n        v-bind=\"component\"\n        @contextmenu.native.prevent=\"contextmenu($event)\"\n        @mousedown.native=\"setActiveComponent(component)\"\n        @dragover.native.stop=\"checkDragOver(component,$event)\"></component>\n        <!-- 动态层级子组件加载 -->\n        <component  v-for=\"child in component.children\"\n          :key=\"child.id\" \n          :class=\"`component-child ${child.id==activeComponent.id?'active':''}`\"\n          v-bind:is=\"child.type\"\n          v-bind=\"child\"         \n          @contextmenu.native.prevent=\"contextmenu($event)\"\n          @mousedown.native=\"setActiveComponent(child)\"\n          @dragover.native.stop=\"checkDragOver(component, $event, child)\"></component>\n    </div>\n</div>\n```\n左侧组件到中间窗口组件及右侧属性编辑组件的通信使用vuex的commit触发响应。当编辑右侧属性组件时会触发修改vuex的state,中间窗口组件通过mapState映射当前编辑组件的实时数据，vue会自动响应中间窗口中元素组件的渲染更新。\n\n### 动态渲染落地页面\n请求接口获取当前落地页面数据，判断不同属性值添加不同功能，渲染页面的代码类似之前中间窗口的渲染模版代码，没有对应的事件处理。\n```\n<div class=\"page-wraper\" :style=\"style\">\n    <div class=\"component-wraper\" v-for=\"(component) in components\" :key=\"component.id\">\n      <!-- 动态组件加载 -->\n      <component v-bind:is=\"component.type\"  v-bind=\"component\"> </component> \n        <!-- 动态层级子组件加载 -->\n        <component  v-for=\"child in component.children\" class=\"component-child\"\n          :key=\"child.id\"         \n          v-bind:is=\"child.type\"\n          v-bind=\"child\"></component>\n    </div>\n\n    <transition name=\"el-fade-in\">\n    <div class=\"backTop\" v-if=\"scrollTop&&page&&page.extra.needBackTop\" @click=\"backTop\">\n      <img :src=\"staticURL+page.extra.backTopImage\" />\n    </div>   \n    </transition>\n</div>\n```\nvue内置组件component通过v-bind:is动态加载所需的元素组件,并传递组件数据。\n元素组件内部获取组件属性并渲染组件，组件会根据环境的不同响应事件，例如：在中间渲染窗口中假如给图片组件添加链接属性，点击并没有响应，但是在落地页面中加载图片组件点击则会响应该事件。\n\n\n## 待完善的功能\n- 逐步实现事件组件、商品组件等。\n- 小程序端的渲染实现（数据结构相同，需使用小程序语法实现），目前只实现H5端。\n\n## 总结\n篇幅有限，细节性问题就不在此描述啦，代码已开源，感兴趣的朋友欢迎 [猛戳围观地址](https://github.com/YuniorZen/landpage)。\n此次分享属个人拙见，如有不足之处欢迎指正，谢谢。\n\n> 讨论是绝佳的反思，被别人指出问题正是改进的空间。\n\n","source":"_posts/可视化页面编辑管理系统开发实践分享.md","raw":"---\ntitle: 可视化页面编辑管理系统开发实践分享\ndate: 2019-11-30 22:00:00\ntags:\n\t- 可视化页面编辑\n\t- 落地页管理\n\t- 页面组件化\n\t- 页面可视化\t\n---\n\n\n## 背景\n之前参与开发一个小程序商城，涉及非常多的落地页面需要前端开发维护，又由于小程序包大小限制，不能完成用小程序代码一一实现，所以最后决定把落地页的需求拆成一个单独的产品-落地页管理系统，通过可视化的界面编辑维护小程序和H5的落地页面，落地页面通过获取后台数据动态生成页面内容。\n对于运营同事来说，在没有前端同事配合的情况下，也可通过可视化的操作来搭建所需的落地页面。解决页面生成的效率问题，同时释放开发人员。\n\n## 落地页管理系统的需求\n- 页面的可维护（新建、编辑、删除、状态管理等）。\n- 页面的常见功能或属性编辑（标题，背景、有效期、微信自定义分享、返回顶部功能等）。\n- 组成页面的元素组件化，可自由拖拽组装，编辑修改组件属性。\n- 页面结构数据化，客户端根据数据动态渲染落地页面。\n\n\n## 功能需求的技术实现\n\n### 技术栈\n后端技术栈 node+Koa+mongodb，提供落地页的更删改查API服务、素材的上传更新及有效期定时检测等。 \n前端技术栈 Vue+Vuex+Vue-route+EmenetUI+Axios，开发实现组成页面所需的基础组件及业务营销组件。\n后端只是简单存储记录，本篇主要分享可视化页面编辑和渲染的前端技术实现。\n\n### 项目目录说明\n```\nsrc\t\t\t\t\t\t\t\n|-- App.vue\t\t\t\t\t\t\t\t\n|-- main.js                       // 项目入口\n|-- components                    // 公共组件目录\n|   |-- BreadCrumb                \t// 面包屑导航组件\n|   |   |-- breadcrumb.scss\n|   |   |-- index.vue\n|   |-- Carousel                  \t// 轮播图组件\n|   |   |-- carousel.scss\n|   |   |-- index.vue\n|   |-- CarouselSet               \t// 轮播图属性编辑组件\n|   |   |-- index.vue\n|   |-- ContextMenu               \t// 右键菜单组件\n|   |   |-- contextmenu.scss\n|   |   |-- index.vue\n|   |-- Event                     \t// 事件组件\n|   |   |-- event.scss\n|   |   |-- index.vue\n|   |-- EventSet                  \t// 事件属性编辑组件\n|   |   |-- index.vue\n|   |-- Goods                     \t// 商品组件\n|   |   |-- goods.scss\n|   |   |-- index.vue\n|   |-- GoodsSet                  \t// 商品属性编辑组件\n|   |   |-- index.vue\n|   |-- HeadInfo                  \t// 头部显示组件\n|   |   |-- headinfo.scss\n|   |   |-- index.vue\n|   |-- Picture                   \t// 图片组件\n|   |   |-- index.vue\n|   |   |-- picture.scss\n|   |-- PictureSet                \t// 图片属性编辑组件\n|   |   |-- index.vue\n|   |-- Video                     \t// 视频组件\n|   |   |-- index.vue\n|   |   |-- video.scss\n|   |-- VideoSet                  \t// 视频属性编辑组件\n|       |-- index.vue\n|-- pages                         // 页面目录\n|   |-- LandPage                  \t// 落地页渲染页面\n|   |   |-- index.vue\n|   |   |-- landpage.scss\n|   |-- Login                     \t// 登陆页面\n|   |   |-- index.vue\n|   |   |-- login.scss\n|   |-- PageCreate                \t// 落地页创建页面\n|   |   |-- index.vue\n|   |   |-- pagecreate.scss\n|   |   |-- components            \t// 创建页面分成左侧组件列表、中间窗口渲染组件、右侧属性编辑组件\n|   |       |-- pageCenter        \t// 中间窗口渲染组件\n|   |       |   |-- index.vue\n|   |       |   |-- pagecenter.scss\n|   |       |-- pageRight         \t// 右侧属性编辑组件\n|   |           |-- index.vue\n|   |           |-- pageright.scss\n|   |-- PageEditor                \t// 落地页编辑页面，共享创建页面，根据路由判断实现不同业务需求\n|   |   |-- index.vue\n|   |   |-- pageeditor.scss\n|   |-- PageList                  \t// 落地页列表页面（新建、编辑、删除、状态管理等）\n|   |   |-- index.vue\n|   |   |-- pagelist.scss\n|   |-- PagePreview               \t// 落地页预览页面\n|       |-- index.vue\n|       |-- pagepreview.scss\n|-- assets                        // 资源目录（样式文件）\n|   |-- style\n|       |-- animate.css\n|       |-- common.scss\n|       |-- normalize.css\n|       |-- var.scss\n|-- http                          // http请求的接口与方法\n|   |-- index.js\n|   |-- request.js\n|-- router                        // 页面路由目录\n|   |-- index.js\n|   |-- permission.js\n|-- store                         // vuex状态管理目录\n|   |-- actions.js\n|   |-- index.js\n|   |-- mutations.js\n|   |-- state.js\n|-- utility                       // 常用工具类函数与静态配置文件目录\n\t|-- const.js\n\t|-- filter.js\n\t|-- index.js\n\t|-- landpage.js\n```\n\n### 页面元素组件化和数据化\n对落地页中的布局和功能需求进行分析总结并抽象出大概元素组件，分为基础组件（图片、视频、轮播图）和营销组件（事件、商品）。\n落地页面的数据结构如下：\n```\npage:{\n\t//页面名称\n\tname:'',\n\t//页面标题\n\ttitle:'',\n\t//页面唯一的key\n\turlKey:'',\n\t//是否需要有效期\n\tneedExpire:false,\n\texpireDate:'',  \n\t//额外功能字段\n\textra:{\n\t\t//页面背景色\n\t\tbackgroundColor:'',\n\t\t//是否需要返回顶部按钮\n\t\tneedBackTop:false,\n\t\tbackTopImage:'',\n\t\t//是否需要自定义分享\n\t\tneedShare:false,\n\t\tshareText:'',\n\t\tshareImage:'',\n\t},\n\t//页面中的组件\n\tcomponents:[\n\t\t{ type:'Picture', name:'图片' }\n\t]\n}\n```\n落地页的创建页面大致如下，分为左侧元素组件列表、中间实时渲染窗口和右侧组件属性编辑区域。\n![创建页面布局图片](/assets/image/landpage-create-2019-11-30.png)\n页面中可以有多个元素组件，然后每个元素组件都有自己的特有属性，每个元素组件对应一个属性组件用来编辑该组件的特有属性，在公共组件目录中可以看到对应的Set组件。\n\n### 从组件的拖拽到属性编辑与实时渲染\n> 从左侧拖拽组件到中间窗口即为页面中添加一个元素组件，新组件为当前激活组件，右侧区域会根据当前激活组件动态加载对应的属性编辑组件。\n\n当拖拽左侧元素组件时，使用@dragstart事件记录当前拖拽的元素，中间窗口使用@dragover计算正在拖拽元素的位置坐标实现拖拽排序和层级元素的判断，@drop事件中根据之前的记录和判断生成元素组件数据到page.components或元素组件的children层级数组中。\n```\n<!-- 中间窗口的渲染模版代码 -->\n<div class=\"page-wraper\" @dragover=\"dragover\" @drop=\"drop\" :style=\"style\">\n    <div\n      v-for=\"(component) in components\"\n      :key=\"component.id\"\n      :class=\"`component-wraper`\">\n      <!-- 动态组件加载 -->\n      <component :class=\"`${component.id==activeComponent.id?'active':''} ${relativeComponent&&relativeComponent.id==component.id?('hover-'+relativeType):''}`\"\n        v-bind:is=\"component.type\"\n        v-bind=\"component\"\n        @contextmenu.native.prevent=\"contextmenu($event)\"\n        @mousedown.native=\"setActiveComponent(component)\"\n        @dragover.native.stop=\"checkDragOver(component,$event)\"></component>\n        <!-- 动态层级子组件加载 -->\n        <component  v-for=\"child in component.children\"\n          :key=\"child.id\" \n          :class=\"`component-child ${child.id==activeComponent.id?'active':''}`\"\n          v-bind:is=\"child.type\"\n          v-bind=\"child\"         \n          @contextmenu.native.prevent=\"contextmenu($event)\"\n          @mousedown.native=\"setActiveComponent(child)\"\n          @dragover.native.stop=\"checkDragOver(component, $event, child)\"></component>\n    </div>\n</div>\n```\n左侧组件到中间窗口组件及右侧属性编辑组件的通信使用vuex的commit触发响应。当编辑右侧属性组件时会触发修改vuex的state,中间窗口组件通过mapState映射当前编辑组件的实时数据，vue会自动响应中间窗口中元素组件的渲染更新。\n\n### 动态渲染落地页面\n请求接口获取当前落地页面数据，判断不同属性值添加不同功能，渲染页面的代码类似之前中间窗口的渲染模版代码，没有对应的事件处理。\n```\n<div class=\"page-wraper\" :style=\"style\">\n    <div class=\"component-wraper\" v-for=\"(component) in components\" :key=\"component.id\">\n      <!-- 动态组件加载 -->\n      <component v-bind:is=\"component.type\"  v-bind=\"component\"> </component> \n        <!-- 动态层级子组件加载 -->\n        <component  v-for=\"child in component.children\" class=\"component-child\"\n          :key=\"child.id\"         \n          v-bind:is=\"child.type\"\n          v-bind=\"child\"></component>\n    </div>\n\n    <transition name=\"el-fade-in\">\n    <div class=\"backTop\" v-if=\"scrollTop&&page&&page.extra.needBackTop\" @click=\"backTop\">\n      <img :src=\"staticURL+page.extra.backTopImage\" />\n    </div>   \n    </transition>\n</div>\n```\nvue内置组件component通过v-bind:is动态加载所需的元素组件,并传递组件数据。\n元素组件内部获取组件属性并渲染组件，组件会根据环境的不同响应事件，例如：在中间渲染窗口中假如给图片组件添加链接属性，点击并没有响应，但是在落地页面中加载图片组件点击则会响应该事件。\n\n\n## 待完善的功能\n- 逐步实现事件组件、商品组件等。\n- 小程序端的渲染实现（数据结构相同，需使用小程序语法实现），目前只实现H5端。\n\n## 总结\n篇幅有限，细节性问题就不在此描述啦，代码已开源，感兴趣的朋友欢迎 [猛戳围观地址](https://github.com/YuniorZen/landpage)。\n此次分享属个人拙见，如有不足之处欢迎指正，谢谢。\n\n> 讨论是绝佳的反思，被别人指出问题正是改进的空间。\n\n","slug":"可视化页面编辑管理系统开发实践分享","published":1,"updated":"2019-12-01T15:09:45.186Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3n56ja000197z7xfk9l1ueh","content":"<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>之前参与开发一个小程序商城，涉及非常多的落地页面需要前端开发维护，又由于小程序包大小限制，不能完成用小程序代码一一实现，所以最后决定把落地页的需求拆成一个单独的产品-落地页管理系统，通过可视化的界面编辑维护小程序和H5的落地页面，落地页面通过获取后台数据动态生成页面内容。<br>对于运营同事来说，在没有前端同事配合的情况下，也可通过可视化的操作来搭建所需的落地页面。解决页面生成的效率问题，同时释放开发人员。</p>\n<h2 id=\"落地页管理系统的需求\"><a href=\"#落地页管理系统的需求\" class=\"headerlink\" title=\"落地页管理系统的需求\"></a>落地页管理系统的需求</h2><ul>\n<li>页面的可维护（新建、编辑、删除、状态管理等）。</li>\n<li>页面的常见功能或属性编辑（标题，背景、有效期、微信自定义分享、返回顶部功能等）。</li>\n<li>组成页面的元素组件化，可自由拖拽组装，编辑修改组件属性。</li>\n<li>页面结构数据化，客户端根据数据动态渲染落地页面。</li>\n</ul>\n<h2 id=\"功能需求的技术实现\"><a href=\"#功能需求的技术实现\" class=\"headerlink\" title=\"功能需求的技术实现\"></a>功能需求的技术实现</h2><h3 id=\"技术栈\"><a href=\"#技术栈\" class=\"headerlink\" title=\"技术栈\"></a>技术栈</h3><p>后端技术栈 node+Koa+mongodb，提供落地页的更删改查API服务、素材的上传更新及有效期定时检测等。<br>前端技术栈 Vue+Vuex+Vue-route+EmenetUI+Axios，开发实现组成页面所需的基础组件及业务营销组件。<br>后端只是简单存储记录，本篇主要分享可视化页面编辑和渲染的前端技术实现。</p>\n<h3 id=\"项目目录说明\"><a href=\"#项目目录说明\" class=\"headerlink\" title=\"项目目录说明\"></a>项目目录说明</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">src\t\t\t\t\t\t\t</span><br><span class=\"line\">|-- App.vue\t\t\t\t\t\t\t\t</span><br><span class=\"line\">|-- main.js                       // 项目入口</span><br><span class=\"line\">|-- components                    // 公共组件目录</span><br><span class=\"line\">|   |-- BreadCrumb                \t// 面包屑导航组件</span><br><span class=\"line\">|   |   |-- breadcrumb.scss</span><br><span class=\"line\">|   |   |-- index.vue</span><br><span class=\"line\">|   |-- Carousel                  \t// 轮播图组件</span><br><span class=\"line\">|   |   |-- carousel.scss</span><br><span class=\"line\">|   |   |-- index.vue</span><br><span class=\"line\">|   |-- CarouselSet               \t// 轮播图属性编辑组件</span><br><span class=\"line\">|   |   |-- index.vue</span><br><span class=\"line\">|   |-- ContextMenu               \t// 右键菜单组件</span><br><span class=\"line\">|   |   |-- contextmenu.scss</span><br><span class=\"line\">|   |   |-- index.vue</span><br><span class=\"line\">|   |-- Event                     \t// 事件组件</span><br><span class=\"line\">|   |   |-- event.scss</span><br><span class=\"line\">|   |   |-- index.vue</span><br><span class=\"line\">|   |-- EventSet                  \t// 事件属性编辑组件</span><br><span class=\"line\">|   |   |-- index.vue</span><br><span class=\"line\">|   |-- Goods                     \t// 商品组件</span><br><span class=\"line\">|   |   |-- goods.scss</span><br><span class=\"line\">|   |   |-- index.vue</span><br><span class=\"line\">|   |-- GoodsSet                  \t// 商品属性编辑组件</span><br><span class=\"line\">|   |   |-- index.vue</span><br><span class=\"line\">|   |-- HeadInfo                  \t// 头部显示组件</span><br><span class=\"line\">|   |   |-- headinfo.scss</span><br><span class=\"line\">|   |   |-- index.vue</span><br><span class=\"line\">|   |-- Picture                   \t// 图片组件</span><br><span class=\"line\">|   |   |-- index.vue</span><br><span class=\"line\">|   |   |-- picture.scss</span><br><span class=\"line\">|   |-- PictureSet                \t// 图片属性编辑组件</span><br><span class=\"line\">|   |   |-- index.vue</span><br><span class=\"line\">|   |-- Video                     \t// 视频组件</span><br><span class=\"line\">|   |   |-- index.vue</span><br><span class=\"line\">|   |   |-- video.scss</span><br><span class=\"line\">|   |-- VideoSet                  \t// 视频属性编辑组件</span><br><span class=\"line\">|       |-- index.vue</span><br><span class=\"line\">|-- pages                         // 页面目录</span><br><span class=\"line\">|   |-- LandPage                  \t// 落地页渲染页面</span><br><span class=\"line\">|   |   |-- index.vue</span><br><span class=\"line\">|   |   |-- landpage.scss</span><br><span class=\"line\">|   |-- Login                     \t// 登陆页面</span><br><span class=\"line\">|   |   |-- index.vue</span><br><span class=\"line\">|   |   |-- login.scss</span><br><span class=\"line\">|   |-- PageCreate                \t// 落地页创建页面</span><br><span class=\"line\">|   |   |-- index.vue</span><br><span class=\"line\">|   |   |-- pagecreate.scss</span><br><span class=\"line\">|   |   |-- components            \t// 创建页面分成左侧组件列表、中间窗口渲染组件、右侧属性编辑组件</span><br><span class=\"line\">|   |       |-- pageCenter        \t// 中间窗口渲染组件</span><br><span class=\"line\">|   |       |   |-- index.vue</span><br><span class=\"line\">|   |       |   |-- pagecenter.scss</span><br><span class=\"line\">|   |       |-- pageRight         \t// 右侧属性编辑组件</span><br><span class=\"line\">|   |           |-- index.vue</span><br><span class=\"line\">|   |           |-- pageright.scss</span><br><span class=\"line\">|   |-- PageEditor                \t// 落地页编辑页面，共享创建页面，根据路由判断实现不同业务需求</span><br><span class=\"line\">|   |   |-- index.vue</span><br><span class=\"line\">|   |   |-- pageeditor.scss</span><br><span class=\"line\">|   |-- PageList                  \t// 落地页列表页面（新建、编辑、删除、状态管理等）</span><br><span class=\"line\">|   |   |-- index.vue</span><br><span class=\"line\">|   |   |-- pagelist.scss</span><br><span class=\"line\">|   |-- PagePreview               \t// 落地页预览页面</span><br><span class=\"line\">|       |-- index.vue</span><br><span class=\"line\">|       |-- pagepreview.scss</span><br><span class=\"line\">|-- assets                        // 资源目录（样式文件）</span><br><span class=\"line\">|   |-- style</span><br><span class=\"line\">|       |-- animate.css</span><br><span class=\"line\">|       |-- common.scss</span><br><span class=\"line\">|       |-- normalize.css</span><br><span class=\"line\">|       |-- var.scss</span><br><span class=\"line\">|-- http                          // http请求的接口与方法</span><br><span class=\"line\">|   |-- index.js</span><br><span class=\"line\">|   |-- request.js</span><br><span class=\"line\">|-- router                        // 页面路由目录</span><br><span class=\"line\">|   |-- index.js</span><br><span class=\"line\">|   |-- permission.js</span><br><span class=\"line\">|-- store                         // vuex状态管理目录</span><br><span class=\"line\">|   |-- actions.js</span><br><span class=\"line\">|   |-- index.js</span><br><span class=\"line\">|   |-- mutations.js</span><br><span class=\"line\">|   |-- state.js</span><br><span class=\"line\">|-- utility                       // 常用工具类函数与静态配置文件目录</span><br><span class=\"line\">\t|-- const.js</span><br><span class=\"line\">\t|-- filter.js</span><br><span class=\"line\">\t|-- index.js</span><br><span class=\"line\">\t|-- landpage.js</span><br></pre></td></tr></table></figure>\n<h3 id=\"页面元素组件化和数据化\"><a href=\"#页面元素组件化和数据化\" class=\"headerlink\" title=\"页面元素组件化和数据化\"></a>页面元素组件化和数据化</h3><p>对落地页中的布局和功能需求进行分析总结并抽象出大概元素组件，分为基础组件（图片、视频、轮播图）和营销组件（事件、商品）。<br>落地页面的数据结构如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">page:&#123;</span><br><span class=\"line\">\t//页面名称</span><br><span class=\"line\">\tname:&apos;&apos;,</span><br><span class=\"line\">\t//页面标题</span><br><span class=\"line\">\ttitle:&apos;&apos;,</span><br><span class=\"line\">\t//页面唯一的key</span><br><span class=\"line\">\turlKey:&apos;&apos;,</span><br><span class=\"line\">\t//是否需要有效期</span><br><span class=\"line\">\tneedExpire:false,</span><br><span class=\"line\">\texpireDate:&apos;&apos;,  </span><br><span class=\"line\">\t//额外功能字段</span><br><span class=\"line\">\textra:&#123;</span><br><span class=\"line\">\t\t//页面背景色</span><br><span class=\"line\">\t\tbackgroundColor:&apos;&apos;,</span><br><span class=\"line\">\t\t//是否需要返回顶部按钮</span><br><span class=\"line\">\t\tneedBackTop:false,</span><br><span class=\"line\">\t\tbackTopImage:&apos;&apos;,</span><br><span class=\"line\">\t\t//是否需要自定义分享</span><br><span class=\"line\">\t\tneedShare:false,</span><br><span class=\"line\">\t\tshareText:&apos;&apos;,</span><br><span class=\"line\">\t\tshareImage:&apos;&apos;,</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\t//页面中的组件</span><br><span class=\"line\">\tcomponents:[</span><br><span class=\"line\">\t\t&#123; type:&apos;Picture&apos;, name:&apos;图片&apos; &#125;</span><br><span class=\"line\">\t]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>落地页的创建页面大致如下，分为左侧元素组件列表、中间实时渲染窗口和右侧组件属性编辑区域。<br><img src=\"/assets/image/landpage-create-2019-11-30.png\" alt=\"创建页面布局图片\"><br>页面中可以有多个元素组件，然后每个元素组件都有自己的特有属性，每个元素组件对应一个属性组件用来编辑该组件的特有属性，在公共组件目录中可以看到对应的Set组件。</p>\n<h3 id=\"从组件的拖拽到属性编辑与实时渲染\"><a href=\"#从组件的拖拽到属性编辑与实时渲染\" class=\"headerlink\" title=\"从组件的拖拽到属性编辑与实时渲染\"></a>从组件的拖拽到属性编辑与实时渲染</h3><blockquote>\n<p>从左侧拖拽组件到中间窗口即为页面中添加一个元素组件，新组件为当前激活组件，右侧区域会根据当前激活组件动态加载对应的属性编辑组件。</p>\n</blockquote>\n<p>当拖拽左侧元素组件时，使用@dragstart事件记录当前拖拽的元素，中间窗口使用@dragover计算正在拖拽元素的位置坐标实现拖拽排序和层级元素的判断，@drop事件中根据之前的记录和判断生成元素组件数据到page.components或元素组件的children层级数组中。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 中间窗口的渲染模版代码 --&gt;</span><br><span class=\"line\">&lt;div class=&quot;page-wraper&quot; @dragover=&quot;dragover&quot; @drop=&quot;drop&quot; :style=&quot;style&quot;&gt;</span><br><span class=\"line\">    &lt;div</span><br><span class=\"line\">      v-for=&quot;(component) in components&quot;</span><br><span class=\"line\">      :key=&quot;component.id&quot;</span><br><span class=\"line\">      :class=&quot;`component-wraper`&quot;&gt;</span><br><span class=\"line\">      &lt;!-- 动态组件加载 --&gt;</span><br><span class=\"line\">      &lt;component :class=&quot;`$&#123;component.id==activeComponent.id?&apos;active&apos;:&apos;&apos;&#125; $&#123;relativeComponent&amp;&amp;relativeComponent.id==component.id?(&apos;hover-&apos;+relativeType):&apos;&apos;&#125;`&quot;</span><br><span class=\"line\">        v-bind:is=&quot;component.type&quot;</span><br><span class=\"line\">        v-bind=&quot;component&quot;</span><br><span class=\"line\">        @contextmenu.native.prevent=&quot;contextmenu($event)&quot;</span><br><span class=\"line\">        @mousedown.native=&quot;setActiveComponent(component)&quot;</span><br><span class=\"line\">        @dragover.native.stop=&quot;checkDragOver(component,$event)&quot;&gt;&lt;/component&gt;</span><br><span class=\"line\">        &lt;!-- 动态层级子组件加载 --&gt;</span><br><span class=\"line\">        &lt;component  v-for=&quot;child in component.children&quot;</span><br><span class=\"line\">          :key=&quot;child.id&quot; </span><br><span class=\"line\">          :class=&quot;`component-child $&#123;child.id==activeComponent.id?&apos;active&apos;:&apos;&apos;&#125;`&quot;</span><br><span class=\"line\">          v-bind:is=&quot;child.type&quot;</span><br><span class=\"line\">          v-bind=&quot;child&quot;         </span><br><span class=\"line\">          @contextmenu.native.prevent=&quot;contextmenu($event)&quot;</span><br><span class=\"line\">          @mousedown.native=&quot;setActiveComponent(child)&quot;</span><br><span class=\"line\">          @dragover.native.stop=&quot;checkDragOver(component, $event, child)&quot;&gt;&lt;/component&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>\n<p>左侧组件到中间窗口组件及右侧属性编辑组件的通信使用vuex的commit触发响应。当编辑右侧属性组件时会触发修改vuex的state,中间窗口组件通过mapState映射当前编辑组件的实时数据，vue会自动响应中间窗口中元素组件的渲染更新。</p>\n<h3 id=\"动态渲染落地页面\"><a href=\"#动态渲染落地页面\" class=\"headerlink\" title=\"动态渲染落地页面\"></a>动态渲染落地页面</h3><p>请求接口获取当前落地页面数据，判断不同属性值添加不同功能，渲染页面的代码类似之前中间窗口的渲染模版代码，没有对应的事件处理。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div class=&quot;page-wraper&quot; :style=&quot;style&quot;&gt;</span><br><span class=\"line\">    &lt;div class=&quot;component-wraper&quot; v-for=&quot;(component) in components&quot; :key=&quot;component.id&quot;&gt;</span><br><span class=\"line\">      &lt;!-- 动态组件加载 --&gt;</span><br><span class=\"line\">      &lt;component v-bind:is=&quot;component.type&quot;  v-bind=&quot;component&quot;&gt; &lt;/component&gt; </span><br><span class=\"line\">        &lt;!-- 动态层级子组件加载 --&gt;</span><br><span class=\"line\">        &lt;component  v-for=&quot;child in component.children&quot; class=&quot;component-child&quot;</span><br><span class=\"line\">          :key=&quot;child.id&quot;         </span><br><span class=\"line\">          v-bind:is=&quot;child.type&quot;</span><br><span class=\"line\">          v-bind=&quot;child&quot;&gt;&lt;/component&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;transition name=&quot;el-fade-in&quot;&gt;</span><br><span class=\"line\">    &lt;div class=&quot;backTop&quot; v-if=&quot;scrollTop&amp;&amp;page&amp;&amp;page.extra.needBackTop&quot; @click=&quot;backTop&quot;&gt;</span><br><span class=\"line\">      &lt;img :src=&quot;staticURL+page.extra.backTopImage&quot; /&gt;</span><br><span class=\"line\">    &lt;/div&gt;   </span><br><span class=\"line\">    &lt;/transition&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>\n<p>vue内置组件component通过v-bind:is动态加载所需的元素组件,并传递组件数据。<br>元素组件内部获取组件属性并渲染组件，组件会根据环境的不同响应事件，例如：在中间渲染窗口中假如给图片组件添加链接属性，点击并没有响应，但是在落地页面中加载图片组件点击则会响应该事件。</p>\n<h2 id=\"待完善的功能\"><a href=\"#待完善的功能\" class=\"headerlink\" title=\"待完善的功能\"></a>待完善的功能</h2><ul>\n<li>逐步实现事件组件、商品组件等。</li>\n<li>小程序端的渲染实现（数据结构相同，需使用小程序语法实现），目前只实现H5端。</li>\n</ul>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>篇幅有限，细节性问题就不在此描述啦，代码已开源，感兴趣的朋友欢迎 <a href=\"https://github.com/YuniorZen/landpage\" target=\"_blank\" rel=\"noopener\">猛戳围观地址</a>。<br>此次分享属个人拙见，如有不足之处欢迎指正，谢谢。</p>\n<blockquote>\n<p>讨论是绝佳的反思，被别人指出问题正是改进的空间。</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>之前参与开发一个小程序商城，涉及非常多的落地页面需要前端开发维护，又由于小程序包大小限制，不能完成用小程序代码一一实现，所以最后决定把落地页的需求拆成一个单独的产品-落地页管理系统，通过可视化的界面编辑维护小程序和H5的落地页面，落地页面通过获取后台数据动态生成页面内容。<br>对于运营同事来说，在没有前端同事配合的情况下，也可通过可视化的操作来搭建所需的落地页面。解决页面生成的效率问题，同时释放开发人员。</p>\n<h2 id=\"落地页管理系统的需求\"><a href=\"#落地页管理系统的需求\" class=\"headerlink\" title=\"落地页管理系统的需求\"></a>落地页管理系统的需求</h2><ul>\n<li>页面的可维护（新建、编辑、删除、状态管理等）。</li>\n<li>页面的常见功能或属性编辑（标题，背景、有效期、微信自定义分享、返回顶部功能等）。</li>\n<li>组成页面的元素组件化，可自由拖拽组装，编辑修改组件属性。</li>\n<li>页面结构数据化，客户端根据数据动态渲染落地页面。</li>\n</ul>\n<h2 id=\"功能需求的技术实现\"><a href=\"#功能需求的技术实现\" class=\"headerlink\" title=\"功能需求的技术实现\"></a>功能需求的技术实现</h2><h3 id=\"技术栈\"><a href=\"#技术栈\" class=\"headerlink\" title=\"技术栈\"></a>技术栈</h3><p>后端技术栈 node+Koa+mongodb，提供落地页的更删改查API服务、素材的上传更新及有效期定时检测等。<br>前端技术栈 Vue+Vuex+Vue-route+EmenetUI+Axios，开发实现组成页面所需的基础组件及业务营销组件。<br>后端只是简单存储记录，本篇主要分享可视化页面编辑和渲染的前端技术实现。</p>\n<h3 id=\"项目目录说明\"><a href=\"#项目目录说明\" class=\"headerlink\" title=\"项目目录说明\"></a>项目目录说明</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">src\t\t\t\t\t\t\t</span><br><span class=\"line\">|-- App.vue\t\t\t\t\t\t\t\t</span><br><span class=\"line\">|-- main.js                       // 项目入口</span><br><span class=\"line\">|-- components                    // 公共组件目录</span><br><span class=\"line\">|   |-- BreadCrumb                \t// 面包屑导航组件</span><br><span class=\"line\">|   |   |-- breadcrumb.scss</span><br><span class=\"line\">|   |   |-- index.vue</span><br><span class=\"line\">|   |-- Carousel                  \t// 轮播图组件</span><br><span class=\"line\">|   |   |-- carousel.scss</span><br><span class=\"line\">|   |   |-- index.vue</span><br><span class=\"line\">|   |-- CarouselSet               \t// 轮播图属性编辑组件</span><br><span class=\"line\">|   |   |-- index.vue</span><br><span class=\"line\">|   |-- ContextMenu               \t// 右键菜单组件</span><br><span class=\"line\">|   |   |-- contextmenu.scss</span><br><span class=\"line\">|   |   |-- index.vue</span><br><span class=\"line\">|   |-- Event                     \t// 事件组件</span><br><span class=\"line\">|   |   |-- event.scss</span><br><span class=\"line\">|   |   |-- index.vue</span><br><span class=\"line\">|   |-- EventSet                  \t// 事件属性编辑组件</span><br><span class=\"line\">|   |   |-- index.vue</span><br><span class=\"line\">|   |-- Goods                     \t// 商品组件</span><br><span class=\"line\">|   |   |-- goods.scss</span><br><span class=\"line\">|   |   |-- index.vue</span><br><span class=\"line\">|   |-- GoodsSet                  \t// 商品属性编辑组件</span><br><span class=\"line\">|   |   |-- index.vue</span><br><span class=\"line\">|   |-- HeadInfo                  \t// 头部显示组件</span><br><span class=\"line\">|   |   |-- headinfo.scss</span><br><span class=\"line\">|   |   |-- index.vue</span><br><span class=\"line\">|   |-- Picture                   \t// 图片组件</span><br><span class=\"line\">|   |   |-- index.vue</span><br><span class=\"line\">|   |   |-- picture.scss</span><br><span class=\"line\">|   |-- PictureSet                \t// 图片属性编辑组件</span><br><span class=\"line\">|   |   |-- index.vue</span><br><span class=\"line\">|   |-- Video                     \t// 视频组件</span><br><span class=\"line\">|   |   |-- index.vue</span><br><span class=\"line\">|   |   |-- video.scss</span><br><span class=\"line\">|   |-- VideoSet                  \t// 视频属性编辑组件</span><br><span class=\"line\">|       |-- index.vue</span><br><span class=\"line\">|-- pages                         // 页面目录</span><br><span class=\"line\">|   |-- LandPage                  \t// 落地页渲染页面</span><br><span class=\"line\">|   |   |-- index.vue</span><br><span class=\"line\">|   |   |-- landpage.scss</span><br><span class=\"line\">|   |-- Login                     \t// 登陆页面</span><br><span class=\"line\">|   |   |-- index.vue</span><br><span class=\"line\">|   |   |-- login.scss</span><br><span class=\"line\">|   |-- PageCreate                \t// 落地页创建页面</span><br><span class=\"line\">|   |   |-- index.vue</span><br><span class=\"line\">|   |   |-- pagecreate.scss</span><br><span class=\"line\">|   |   |-- components            \t// 创建页面分成左侧组件列表、中间窗口渲染组件、右侧属性编辑组件</span><br><span class=\"line\">|   |       |-- pageCenter        \t// 中间窗口渲染组件</span><br><span class=\"line\">|   |       |   |-- index.vue</span><br><span class=\"line\">|   |       |   |-- pagecenter.scss</span><br><span class=\"line\">|   |       |-- pageRight         \t// 右侧属性编辑组件</span><br><span class=\"line\">|   |           |-- index.vue</span><br><span class=\"line\">|   |           |-- pageright.scss</span><br><span class=\"line\">|   |-- PageEditor                \t// 落地页编辑页面，共享创建页面，根据路由判断实现不同业务需求</span><br><span class=\"line\">|   |   |-- index.vue</span><br><span class=\"line\">|   |   |-- pageeditor.scss</span><br><span class=\"line\">|   |-- PageList                  \t// 落地页列表页面（新建、编辑、删除、状态管理等）</span><br><span class=\"line\">|   |   |-- index.vue</span><br><span class=\"line\">|   |   |-- pagelist.scss</span><br><span class=\"line\">|   |-- PagePreview               \t// 落地页预览页面</span><br><span class=\"line\">|       |-- index.vue</span><br><span class=\"line\">|       |-- pagepreview.scss</span><br><span class=\"line\">|-- assets                        // 资源目录（样式文件）</span><br><span class=\"line\">|   |-- style</span><br><span class=\"line\">|       |-- animate.css</span><br><span class=\"line\">|       |-- common.scss</span><br><span class=\"line\">|       |-- normalize.css</span><br><span class=\"line\">|       |-- var.scss</span><br><span class=\"line\">|-- http                          // http请求的接口与方法</span><br><span class=\"line\">|   |-- index.js</span><br><span class=\"line\">|   |-- request.js</span><br><span class=\"line\">|-- router                        // 页面路由目录</span><br><span class=\"line\">|   |-- index.js</span><br><span class=\"line\">|   |-- permission.js</span><br><span class=\"line\">|-- store                         // vuex状态管理目录</span><br><span class=\"line\">|   |-- actions.js</span><br><span class=\"line\">|   |-- index.js</span><br><span class=\"line\">|   |-- mutations.js</span><br><span class=\"line\">|   |-- state.js</span><br><span class=\"line\">|-- utility                       // 常用工具类函数与静态配置文件目录</span><br><span class=\"line\">\t|-- const.js</span><br><span class=\"line\">\t|-- filter.js</span><br><span class=\"line\">\t|-- index.js</span><br><span class=\"line\">\t|-- landpage.js</span><br></pre></td></tr></table></figure>\n<h3 id=\"页面元素组件化和数据化\"><a href=\"#页面元素组件化和数据化\" class=\"headerlink\" title=\"页面元素组件化和数据化\"></a>页面元素组件化和数据化</h3><p>对落地页中的布局和功能需求进行分析总结并抽象出大概元素组件，分为基础组件（图片、视频、轮播图）和营销组件（事件、商品）。<br>落地页面的数据结构如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">page:&#123;</span><br><span class=\"line\">\t//页面名称</span><br><span class=\"line\">\tname:&apos;&apos;,</span><br><span class=\"line\">\t//页面标题</span><br><span class=\"line\">\ttitle:&apos;&apos;,</span><br><span class=\"line\">\t//页面唯一的key</span><br><span class=\"line\">\turlKey:&apos;&apos;,</span><br><span class=\"line\">\t//是否需要有效期</span><br><span class=\"line\">\tneedExpire:false,</span><br><span class=\"line\">\texpireDate:&apos;&apos;,  </span><br><span class=\"line\">\t//额外功能字段</span><br><span class=\"line\">\textra:&#123;</span><br><span class=\"line\">\t\t//页面背景色</span><br><span class=\"line\">\t\tbackgroundColor:&apos;&apos;,</span><br><span class=\"line\">\t\t//是否需要返回顶部按钮</span><br><span class=\"line\">\t\tneedBackTop:false,</span><br><span class=\"line\">\t\tbackTopImage:&apos;&apos;,</span><br><span class=\"line\">\t\t//是否需要自定义分享</span><br><span class=\"line\">\t\tneedShare:false,</span><br><span class=\"line\">\t\tshareText:&apos;&apos;,</span><br><span class=\"line\">\t\tshareImage:&apos;&apos;,</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\t//页面中的组件</span><br><span class=\"line\">\tcomponents:[</span><br><span class=\"line\">\t\t&#123; type:&apos;Picture&apos;, name:&apos;图片&apos; &#125;</span><br><span class=\"line\">\t]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>落地页的创建页面大致如下，分为左侧元素组件列表、中间实时渲染窗口和右侧组件属性编辑区域。<br><img src=\"/assets/image/landpage-create-2019-11-30.png\" alt=\"创建页面布局图片\"><br>页面中可以有多个元素组件，然后每个元素组件都有自己的特有属性，每个元素组件对应一个属性组件用来编辑该组件的特有属性，在公共组件目录中可以看到对应的Set组件。</p>\n<h3 id=\"从组件的拖拽到属性编辑与实时渲染\"><a href=\"#从组件的拖拽到属性编辑与实时渲染\" class=\"headerlink\" title=\"从组件的拖拽到属性编辑与实时渲染\"></a>从组件的拖拽到属性编辑与实时渲染</h3><blockquote>\n<p>从左侧拖拽组件到中间窗口即为页面中添加一个元素组件，新组件为当前激活组件，右侧区域会根据当前激活组件动态加载对应的属性编辑组件。</p>\n</blockquote>\n<p>当拖拽左侧元素组件时，使用@dragstart事件记录当前拖拽的元素，中间窗口使用@dragover计算正在拖拽元素的位置坐标实现拖拽排序和层级元素的判断，@drop事件中根据之前的记录和判断生成元素组件数据到page.components或元素组件的children层级数组中。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 中间窗口的渲染模版代码 --&gt;</span><br><span class=\"line\">&lt;div class=&quot;page-wraper&quot; @dragover=&quot;dragover&quot; @drop=&quot;drop&quot; :style=&quot;style&quot;&gt;</span><br><span class=\"line\">    &lt;div</span><br><span class=\"line\">      v-for=&quot;(component) in components&quot;</span><br><span class=\"line\">      :key=&quot;component.id&quot;</span><br><span class=\"line\">      :class=&quot;`component-wraper`&quot;&gt;</span><br><span class=\"line\">      &lt;!-- 动态组件加载 --&gt;</span><br><span class=\"line\">      &lt;component :class=&quot;`$&#123;component.id==activeComponent.id?&apos;active&apos;:&apos;&apos;&#125; $&#123;relativeComponent&amp;&amp;relativeComponent.id==component.id?(&apos;hover-&apos;+relativeType):&apos;&apos;&#125;`&quot;</span><br><span class=\"line\">        v-bind:is=&quot;component.type&quot;</span><br><span class=\"line\">        v-bind=&quot;component&quot;</span><br><span class=\"line\">        @contextmenu.native.prevent=&quot;contextmenu($event)&quot;</span><br><span class=\"line\">        @mousedown.native=&quot;setActiveComponent(component)&quot;</span><br><span class=\"line\">        @dragover.native.stop=&quot;checkDragOver(component,$event)&quot;&gt;&lt;/component&gt;</span><br><span class=\"line\">        &lt;!-- 动态层级子组件加载 --&gt;</span><br><span class=\"line\">        &lt;component  v-for=&quot;child in component.children&quot;</span><br><span class=\"line\">          :key=&quot;child.id&quot; </span><br><span class=\"line\">          :class=&quot;`component-child $&#123;child.id==activeComponent.id?&apos;active&apos;:&apos;&apos;&#125;`&quot;</span><br><span class=\"line\">          v-bind:is=&quot;child.type&quot;</span><br><span class=\"line\">          v-bind=&quot;child&quot;         </span><br><span class=\"line\">          @contextmenu.native.prevent=&quot;contextmenu($event)&quot;</span><br><span class=\"line\">          @mousedown.native=&quot;setActiveComponent(child)&quot;</span><br><span class=\"line\">          @dragover.native.stop=&quot;checkDragOver(component, $event, child)&quot;&gt;&lt;/component&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>\n<p>左侧组件到中间窗口组件及右侧属性编辑组件的通信使用vuex的commit触发响应。当编辑右侧属性组件时会触发修改vuex的state,中间窗口组件通过mapState映射当前编辑组件的实时数据，vue会自动响应中间窗口中元素组件的渲染更新。</p>\n<h3 id=\"动态渲染落地页面\"><a href=\"#动态渲染落地页面\" class=\"headerlink\" title=\"动态渲染落地页面\"></a>动态渲染落地页面</h3><p>请求接口获取当前落地页面数据，判断不同属性值添加不同功能，渲染页面的代码类似之前中间窗口的渲染模版代码，没有对应的事件处理。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div class=&quot;page-wraper&quot; :style=&quot;style&quot;&gt;</span><br><span class=\"line\">    &lt;div class=&quot;component-wraper&quot; v-for=&quot;(component) in components&quot; :key=&quot;component.id&quot;&gt;</span><br><span class=\"line\">      &lt;!-- 动态组件加载 --&gt;</span><br><span class=\"line\">      &lt;component v-bind:is=&quot;component.type&quot;  v-bind=&quot;component&quot;&gt; &lt;/component&gt; </span><br><span class=\"line\">        &lt;!-- 动态层级子组件加载 --&gt;</span><br><span class=\"line\">        &lt;component  v-for=&quot;child in component.children&quot; class=&quot;component-child&quot;</span><br><span class=\"line\">          :key=&quot;child.id&quot;         </span><br><span class=\"line\">          v-bind:is=&quot;child.type&quot;</span><br><span class=\"line\">          v-bind=&quot;child&quot;&gt;&lt;/component&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;transition name=&quot;el-fade-in&quot;&gt;</span><br><span class=\"line\">    &lt;div class=&quot;backTop&quot; v-if=&quot;scrollTop&amp;&amp;page&amp;&amp;page.extra.needBackTop&quot; @click=&quot;backTop&quot;&gt;</span><br><span class=\"line\">      &lt;img :src=&quot;staticURL+page.extra.backTopImage&quot; /&gt;</span><br><span class=\"line\">    &lt;/div&gt;   </span><br><span class=\"line\">    &lt;/transition&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>\n<p>vue内置组件component通过v-bind:is动态加载所需的元素组件,并传递组件数据。<br>元素组件内部获取组件属性并渲染组件，组件会根据环境的不同响应事件，例如：在中间渲染窗口中假如给图片组件添加链接属性，点击并没有响应，但是在落地页面中加载图片组件点击则会响应该事件。</p>\n<h2 id=\"待完善的功能\"><a href=\"#待完善的功能\" class=\"headerlink\" title=\"待完善的功能\"></a>待完善的功能</h2><ul>\n<li>逐步实现事件组件、商品组件等。</li>\n<li>小程序端的渲染实现（数据结构相同，需使用小程序语法实现），目前只实现H5端。</li>\n</ul>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>篇幅有限，细节性问题就不在此描述啦，代码已开源，感兴趣的朋友欢迎 <a href=\"https://github.com/YuniorZen/landpage\" target=\"_blank\" rel=\"noopener\">猛戳围观地址</a>。<br>此次分享属个人拙见，如有不足之处欢迎指正，谢谢。</p>\n<blockquote>\n<p>讨论是绝佳的反思，被别人指出问题正是改进的空间。</p>\n</blockquote>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"ck3n56j4w00007z7xji2wvcfn","category_id":"ck3n56j5200027z7xp2te5f1l","_id":"ck3n56j5800097z7xkuywub9z"},{"post_id":"ck3n56j5000017z7xh95vhsnn","category_id":"ck3n56j5700077z7xgx63u8l4","_id":"ck3n56j5a000d7z7x71u38kuu"},{"post_id":"ck3n56j5400047z7x83itwrn4","category_id":"ck3n56j5700077z7xgx63u8l4","_id":"ck3n56j5b000g7z7xy67ibv0y"},{"post_id":"ck3n56j5500057z7xt9xs48xt","category_id":"ck3n56j5700077z7xgx63u8l4","_id":"ck3n56j5b000k7z7x4yep4t7q"}],"PostTag":[{"post_id":"ck3n56j4w00007z7xji2wvcfn","tag_id":"ck3n56j5300037z7xv35o13cl","_id":"ck3n56j5b000f7z7xypowkon2"},{"post_id":"ck3n56j4w00007z7xji2wvcfn","tag_id":"ck3n56j5700087z7x5ol72i7p","_id":"ck3n56j5b000h7z7xev2ex0fh"},{"post_id":"ck3n56j4w00007z7xji2wvcfn","tag_id":"ck3n56j58000b7z7xh7qvu6ta","_id":"ck3n56j5b000j7z7xg65aohwe"},{"post_id":"ck3n56j5000017z7xh95vhsnn","tag_id":"ck3n56j5a000e7z7xggx6xoxa","_id":"ck3n56j5c000n7z7xc7qtn5z7"},{"post_id":"ck3n56j5000017z7xh95vhsnn","tag_id":"ck3n56j5b000i7z7xd2hxgbge","_id":"ck3n56j5c000o7z7xihnkubqk"},{"post_id":"ck3n56j5000017z7xh95vhsnn","tag_id":"ck3n56j5b000l7z7xrzamht48","_id":"ck3n56j5c000q7z7x343y7ae6"},{"post_id":"ck3n56j5400047z7x83itwrn4","tag_id":"ck3n56j5b000m7z7xuueq08gy","_id":"ck3n56j5c000t7z7x9e6ywuwo"},{"post_id":"ck3n56j5400047z7x83itwrn4","tag_id":"ck3n56j5c000p7z7xkxnju2sq","_id":"ck3n56j5c000u7z7xh15lpvz1"},{"post_id":"ck3n56j5400047z7x83itwrn4","tag_id":"ck3n56j5c000r7z7x2p5ptoo9","_id":"ck3n56j5d000w7z7x0spja4tg"},{"post_id":"ck3n56j5500057z7xt9xs48xt","tag_id":"ck3n56j5c000s7z7x0kn605z6","_id":"ck3n56j5d000z7z7xruewtluk"},{"post_id":"ck3n56j5500057z7xt9xs48xt","tag_id":"ck3n56j5c000v7z7xkb17qzhv","_id":"ck3n56j5d00107z7xdi96ibxt"},{"post_id":"ck3n56j5500057z7xt9xs48xt","tag_id":"ck3n56j5d000x7z7xur52mmqb","_id":"ck3n56j5d00127z7xowc6jlvo"},{"post_id":"ck3n56j5600067z7x2n375u1j","tag_id":"ck3n56j5c000s7z7x0kn605z6","_id":"ck3n56j5e00157z7x5si1tr99"},{"post_id":"ck3n56j5600067z7x2n375u1j","tag_id":"ck3n56j5d00117z7xy41c8sxj","_id":"ck3n56j5e00167z7xs89trc2b"},{"post_id":"ck3n56j5600067z7x2n375u1j","tag_id":"ck3n56j5e00137z7xku7mmr3o","_id":"ck3n56j5e00177z7xtle4c8jf"},{"post_id":"ck3n56j5600067z7x2n375u1j","tag_id":"ck3n56j5e00147z7x9u3uj8uf","_id":"ck3n56j5e00187z7x8hvg5r0y"},{"post_id":"ck3n56ja000197z7xfk9l1ueh","tag_id":"ck3n56ja4001c7z7xod2a2apu","_id":"ck3n56ja8001h7z7xct4l5hgl"},{"post_id":"ck3n56ja000197z7xfk9l1ueh","tag_id":"ck3n56ja6001e7z7xg3gbord5","_id":"ck3n56ja8001i7z7x25cz4nk8"},{"post_id":"ck3n56ja000197z7xfk9l1ueh","tag_id":"ck3n56ja7001f7z7xf9r2y9mr","_id":"ck3n56ja8001j7z7xrnlzdniy"},{"post_id":"ck3n56ja000197z7xfk9l1ueh","tag_id":"ck3n56ja7001g7z7xbh8ac9z6","_id":"ck3n56ja8001k7z7xh8ubnjwo"}],"Tag":[{"name":"区块链","_id":"ck3n56j5300037z7xv35o13cl"},{"name":"Gas","_id":"ck3n56j5700087z7x5ol72i7p"},{"name":"以太坊Gas","_id":"ck3n56j58000b7z7xh7qvu6ta"},{"name":"Vue","_id":"ck3n56j5a000e7z7xggx6xoxa"},{"name":"WebFont","_id":"ck3n56j5b000i7z7xd2hxgbge"},{"name":"字体库","_id":"ck3n56j5b000l7z7xrzamht48"},{"name":"伪元素","_id":"ck3n56j5b000m7z7xuueq08gy"},{"name":"手机端点击区域过小","_id":"ck3n56j5c000p7z7xkxnju2sq"},{"name":"放大点击区域","_id":"ck3n56j5c000r7z7x2p5ptoo9"},{"name":"小程序","_id":"ck3n56j5c000s7z7x0kn605z6"},{"name":"消去IOS橡皮筋","_id":"ck3n56j5c000v7z7xkb17qzhv"},{"name":"小程序中IOS橡皮筋效果的坑","_id":"ck3n56j5d000x7z7xur52mmqb"},{"name":"自定义导航组件","_id":"ck3n56j5d00117z7xy41c8sxj"},{"name":"顶部导航组件实现原理","_id":"ck3n56j5e00137z7xku7mmr3o"},{"name":"小程序导航组件的坑","_id":"ck3n56j5e00147z7x9u3uj8uf"},{"name":"可视化页面编辑","_id":"ck3n56ja4001c7z7xod2a2apu"},{"name":"落地页管理","_id":"ck3n56ja6001e7z7xg3gbord5"},{"name":"页面组件化","_id":"ck3n56ja7001f7z7xf9r2y9mr"},{"name":"页面可视化","_id":"ck3n56ja7001g7z7xbh8ac9z6"}]}}